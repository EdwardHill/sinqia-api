{"version":3,"sources":["webpack:///./node_modules/@stomp/ng2-stompjs/fesm5/stomp-ng2-stompjs.js","webpack:///./node_modules/@stomp/rx-stomp/bundles/rx-stomp.umd.js","webpack:///./node_modules/@stomp/stompjs/bundles/stomp.umd.js","webpack:///./src/app/_config/socket-endpoints.ts","webpack:///./src/app/_modules/cliente/services/interacao.service.ts","webpack:///./src/app/_shared/model/enum/status-da-solicitacao.ts","webpack:///./src/app/_shared/model/enum/tipo-servico-info.ts","webpack:///./src/app/_shared/model/file-to-upload.model.ts","webpack:///./src/app/_shared/services/socket.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACmB;AACgD;AAC9D;AACF;AACS;;AAE9C;AACA;AACA,cAAc,WAAW;AACzB;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,iDAAiD,sBAAsB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA,0BAA0B,oDAAe;AACzC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,4DAAY;AAC/B;AACA;AACA,mBAAmB,4DAAY;AAC/B;AACA;AACA,mBAAmB,4DAAY;AAC/B;AACA;AACA,mBAAmB,4DAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,wCAAwC,0DAAG;AAC3C;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA,iDAAiD,yBAAyB,EAAE,kDAAkD;AAC9H;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,+BAA+B,yCAAyC,mBAAmB,YAAY;AACvG;AACA;AACA,yCAAyC;AACzC,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,+BAA+B,yCAAyC,mBAAmB,YAAY;AACvG;AACA;AACA,yCAAyC;AACzC,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA,CAAC,CAAC,uDAAO;;AAET;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,iDAAiD,+BAA+B;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,iDAAiD,sBAAsB,OAAO,6BAA6B;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,+CAA+C;AAC/C,SAAS,qBAAqB;AAC9B,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,wCAAwC,eAAe;AACvD,eAAe,eAAe;AAC9B;AACA,SAAS;AACT;AACA;AACA,aAAa,6BAA6B;AAC1C;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC,CAAC,uDAAO;;AAET;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,0BAA0B,wBAAwB;AAClD;AACA,iBAAiB;AACjB;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC,CAAC,gEAAgB;AAClB;AACA,oBAAoB,kCAAkC;AACtD;AACA,eAAe,EAAE;;AAEjB;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,0BAA0B,kBAAkB;AAC5C;AACA,iBAAiB;AACjB;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,oDAAoD;AACpD,SAAS,wBAAwB;AACjC,SAAS,iDAAiD,OAAO,sDAAQ,EAAE,IAAI;AAC/E,MAAM;AACN;AACA,CAAC,CAAC,0DAAU;;AAEZ;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,wCAAwC,qBAAqB;AAC7D,eAAe,qBAAqB;AACpC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC,CAAC,6DAAa;;AAEf;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,wDAAwD,sBAAsB;AAC9E,IAAI,sBAAsB;AAC1B,mDAAmD,sBAAsB;AACzE;AACA,SAAS;AACT;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAE2M;;AAE3M,2CAA2C,cAAc,ujuB;;;;;;;;;;;AC7kBzD;AACA,IAAI,IAAyD;AAC7D,2BAA2B,mBAAO,CAAC,0EAAgB,GAAG,mBAAO,CAAC,gDAAM,GAAG,mBAAO,CAAC,oEAAgB;AAC/F,MAAM,EAKgF;AACtF,CAAC;AACD,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gCAAgC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,kBAAkB;AAClF;AACA,yDAAyD,cAAc;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,iCAAiC;AAClF,wHAAwH,mBAAmB,EAAE;AAC7I;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0BAA0B,EAAE;AAC/D,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA,8DAA8D,+DAA+D;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,wBAAwB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA,mCAAmC,iFAAiF;AACpH;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,mEAAmE;;;AAGpE,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,IAAI,aAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,mCAAmC;AAC1G;AACA;AACA,iCAAiC,yBAAyB;AAC1D;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,EAAE,EAAE;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,uBAAuB;AAC5E;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,gDAAgD;AACxF;AACA;AACA;AACA,iCAAiC;AACjC;AACA,aAAa,4BAA4B,MAAM;AAC/C;AACA;AACA,+BAA+B,sCAAsC,YAAY,uBAAuB;AACxG;AACA;AACA,+BAA+B,iDAAiD;AAChF;AACA;AACA,+BAA+B,mEAAmE;AAClG;AACA,oDAAoD;AACpD;AACA,+BAA+B;AAC/B,yCAAyC,4CAA4C;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,8BAA8B;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,+BAA+B,yCAAyC,mBAAmB,YAAY;AACvG;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA,OAAO;;AAEP;AACA;AACA,iBAAiB,iGAAiG;AAClH;AACA;AACA;;AAEA;;AAEA,OAAO;;AAEP;AACA;AACA,iBAAiB,kEAAkE;AACnF;AACA;AACA;;AAEA;;AAEA,OAAO;;AAEP;AACA;AACA,iBAAiB,4GAA4G;AAC7H;AACA;AACA;;AAEA;;AAEA,OAAO;;AAEP,UAAU;AACV,CAAC;AACD,wC;;;;;;;;;;;ACrzBA;AACA,IAAI,IAAyD;AAC7D;AACA,MAAM,EAKwB;AAC9B,CAAC;AACD,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gCAAgC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,kBAAkB;AAClF;AACA,yDAAyD,cAAc;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,iCAAiC;AAClF,wHAAwH,mBAAmB,EAAE;AAC7I;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0BAA0B,EAAE;AAC/D,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA,8DAA8D,+DAA+D;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,mCAAmC;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,8BAA8B;AAChE,oDAAoD,8BAA8B;AAClF;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,oDAAoD;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,4BAA4B;AAC5F;AACA;AACA,gCAAgC,wBAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,sBAAsB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,wBAAwB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sCAAsC,YAAY,uBAAuB;AACvG;AACA;AACA,8BAA8B,iDAAiD;AAC/E;AACA;AACA,8BAA8B,mEAAmE;AACjG;AACA,oDAAoD;AACpD;AACA,8BAA8B;AAC9B,yCAAyC,4CAA4C;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,6DAA6D,mBAAmB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,8BAA8B,yCAAyC,mBAAmB,YAAY;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,0EAA0E,cAAc;AACxF;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA,oCAAoC,wBAAwB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA,0CAA0C,mBAAmB,wBAAwB;AACrF,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,0BAA0B;AAC9F,QAAQ,mBAAmB,4BAA4B,mBAAmB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,yBAAyB;AAC3F,QAAQ,mBAAmB,4BAA4B,mBAAmB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,mBAAmB;AACpG,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA,mFAAmF,oBAAoB;AACvG,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,gEAAgE,aAAa;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE,qCAAqC,8BAA8B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,sBAAsB;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,iDAAiD;AACjD,kDAAkD;AAClD,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,wBAAwB;AAC/G;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD,kCAAkC;AAClC;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,qBAAqB;AACvF;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C,8BAA8B,WAAW;AACzC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oFAAoF,4BAA4B;AAChH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,+EAA+E,uBAAuB;AACtG;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,sFAAsF,8BAA8B;AACpH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,wFAAwF,gCAAgC;AACxH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wFAAwF,gCAAgC;AACxH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,wFAAwF,gCAAgC;AACxH,iDAAiD,6BAA6B;AAC9E;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wFAAwF,gCAAgC;AACxH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,uFAAuF;AACvF,sCAAsC,+BAA+B;AACrE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uFAAuF;AACvF,sCAAsC,+BAA+B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,+CAA+C,aAAa;AAC5D;AACA;AACA;AACA;AACA;AACA,+DAA+D,aAAa;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,mBAAmB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,mEAAmE;AACnE,uCAAuC,8BAA8B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE,uCAAuC,8BAA8B;AACrE;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,eAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sCAAsC;AACzE;AACA,yDAAyD,gBAAgB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,EAAE,gBAAgB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,qCAAqC;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA,8BAA8B,aAAa;AAC3C,uBAAuB,aAAa,0BAA0B,uBAAuB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,cAAc;AAC3D;AACA;AACA;AACA,6CAA6C,cAAc;AAC3D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,6BAA6B,8CAA8C;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,wBAAwB,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iDAAiD,GAAG;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,oDAAoD;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2BAA2B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,wBAAwB,yCAAyC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C,kCAAkC;AAClC;AACA;AACA,wBAAwB,2CAA2C;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iCAAiC,cAAc;AAC/C,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mCAAmC;AAC3D;AACA;AACA,iCAAiC,cAAc;AAC/C,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oCAAoC;AACnE;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA,oEAAoE,qBAAqB;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,4CAA4C,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yEAAyE;;;AAG1E,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA,OAAO;;AAEP,UAAU;AACV,CAAC;AACD,qC;;;;;;;;;;;;ACpkEA;AAAA;AAAA;AAA+D;AAC/D,wCAAwC;AACxC,mBAAmB;AACnB,gDAAgD;AAChD,IAAM,SAAS,GAAG,aAAa,CAAC;AAChC,IAAM,IAAI,GAAG,cAAc,CAAC;AAE5B;IAAA;IAYA,CAAC;IARiB,sBAAM,GAAG,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,4BAA4B,CAAC;IAG5G,iDAAiC,GAAG,SAAS,GAAG,YAAY,CAAC;IAC7D,8BAAc,GAAG,IAAI,GAAG,YAAY,CAAC;IAErC,gCAAgB,GAAG,SAAS,GAAG,cAAc,CAAC;IAC9C,gCAAgB,GAAG,IAAI,GAAG,cAAc,CAAC;IAC3D,sBAAC;CAAA;AAZ2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACN6B;AAEP;AACP;AAK3C;IAEE,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,+BAAI,GAAJ,UAAK,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,2DAAS,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,iCAAM,GAAN,UAAO,YAA0B;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAe,2DAAS,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;IACzE,CAAC;IAVU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,gBAAgB,CAW5B;IAAD,uBAAC;CAAA;AAX4B;;;;;;;;;;;;;ACT7B;AAAA;AAAA;IAAA;IA8CA,CAAC;IA5CiB,sCAAkB,GAAU;QACtC,EAAE,EAAE,CAAC,CAAC;QACN,KAAK,EAAE,oBAAoB;KAC9B,CAAC;IAEY,mDAA+B,GAAU;QACnD,EAAE,EAAE,CAAC,CAAC;QACN,KAAK,EAAE,iCAAiC;KAC3C,CAAC;IAEY,2DAAuC,GAAU;QAC3D,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,yCAAyC;KACnD,CAAC;IAEY,8CAA0B,GAAU;QAC9C,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,4BAA4B;KACtC,CAAC;IAEY,kCAAc,GAAU;QAClC,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,gBAAgB;KAC1B,CAAC;IAEY,wCAAoB,GAAU;QACxC,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,sBAAsB;KAChC,CAAC;IAEY,6BAAS,GAAU;QAC7B,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,WAAW;KACrB,CAAC;IAEY,2BAAO,GAAU;QAC3B,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,SAAS;KACnB,CAAC;IAEY,6BAAS,GAAU;QAC7B,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,WAAW;KACrB,CAAC;IACN,0BAAC;CAAA;AA9C+B;;;;;;;;;;;;;ACAhC;AAAA;AAAA;IAAA;QAEW,WAAM,GAAU;YACnB,EAAE,EAAE,CAAC;YACL,KAAK,EAAE,QAAQ;SAClB,CAAC;QAEK,SAAI,GAAU;YACjB,EAAE,EAAE,CAAC;YACL,KAAK,EAAE,MAAM;SAChB,CAAC;QAEK,aAAQ,GAAU;YACrB,EAAE,EAAE,CAAC;YACL,KAAK,EAAE,UAAU;SACpB,CAAC;IACN,CAAC;IAAD,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;AChBD;AAAA;AAAA;IAAA;QACI,aAAQ,GAAW,EAAE,CAAC;QACtB,aAAQ,GAAW,CAAC,CAAC;QACrB,aAAQ,GAAW,EAAE,CAAC;QACtB,qBAAgB,GAAW,CAAC,CAAC;QAC7B,qBAAgB,GAAS,IAAI,CAAC;QAC9B,iBAAY,GAAW,EAAE,CAAC;IAC9B,CAAC;IAAD,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAA2E;AAI3E,gBAAgB;AAChB,uBAAuB;AACvB,KAAK;AACL;IAIE,uBAAY,SAAiB,EAAE,SAAiB;QAC9C,6BAA6B;QAC7B,IAAM,WAAW,GAAgB;YAC/B,GAAG,EAAE,SAAS;YACd,OAAO,EAAE;gBACP,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,EAAE;aACb;YACD,YAAY,EAAE,CAAC;YACf,aAAa,EAAE,KAAK;YACpB,eAAe,EAAE,IAAI;YACrB,KAAK,EAAE,IAAI;SACZ,CAAC;QAEF,uBAAuB;QACvB,IAAI,CAAC,YAAY,GAAG,IAAI,+DAAY,CAAC,WAAW,CAAC,CAAC;QAElD,sBAAsB;QACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IACzD,CAAC;IAEM,8BAAM,GAAb;QACE,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAEM,4BAAI,GAAX,UAAY,GAAW,EAAE,OAAY;QACnC,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;IACjE,CAAC;IAEM,6BAAK,GAAZ;QACE,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;IACjC,CAAC;IACH,oBAAC;AAAD,CAAC","file":"default~_modules-cliente-cliente-module~_modules-vendedor-vendedor-module.js","sourcesContent":["import { __extends } from 'tslib';\nimport { Injectable, Optional } from '@angular/core';\nimport { RxStomp, RxStompState, RxStompRPCConfig, RxStompRPC, RxStompConfig } from '@stomp/rx-stomp';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nexport { StompHeaders } from '@stomp/stompjs';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar StompState = {\n    CLOSED: 0,\n    TRYING: 1,\n    CONNECTED: 2,\n    DISCONNECTING: 3,\n};\nStompState[StompState.CLOSED] = \"CLOSED\";\nStompState[StompState.TRYING] = \"TRYING\";\nStompState[StompState.CONNECTED] = \"CONNECTED\";\nStompState[StompState.DISCONNECTING] = \"DISCONNECTING\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Part of `\\@stomp/ng2-stompjs`.\n *\n * **This class has been deprecated in favor of {\\@link RxStompService}.\n * It will be dropped `\\@stomp/ng2-stompjs\\@8.x.x`.**\n *\n * Angular2 STOMP Raw Service using \\@stomp/stomp.js\n *\n * You will only need the public properties and\n * methods listed unless you are an advanced user. This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you will like to pass the configuration as a dependency,\n * please use StompService class.\n */\nvar StompRService = /** @class */ (function (_super) {\n    __extends(StompRService, _super);\n    function StompRService() {\n        var _this = _super.call(this) || this;\n        _this.state = new BehaviorSubject(StompState.CLOSED);\n        _this.connectionState$.subscribe(function (st) {\n            _this.state.next(StompRService._mapStompState(st));\n        });\n        return _this;\n    }\n    /**\n     * @param {?} st\n     * @return {?}\n     */\n    StompRService._mapStompState = /**\n     * @param {?} st\n     * @return {?}\n     */\n    function (st) {\n        if (st === RxStompState.CONNECTING) {\n            return StompState.TRYING;\n        }\n        if (st === RxStompState.OPEN) {\n            return StompState.CONNECTED;\n        }\n        if (st === RxStompState.CLOSING) {\n            return StompState.DISCONNECTING;\n        }\n        if (st === RxStompState.CLOSED) {\n            return StompState.CLOSED;\n        }\n    };\n    Object.defineProperty(StompRService.prototype, \"connectObservable\", {\n        /**\n         * Will trigger when connection is established. Use this to carry out initialization.\n         * It will trigger every time a (re)connection occurs. If it is already connected\n         * it will trigger immediately. You can safely ignore the value, as it will always be\n         * StompState.CONNECTED\n         */\n        get: /**\n         * Will trigger when connection is established. Use this to carry out initialization.\n         * It will trigger every time a (re)connection occurs. If it is already connected\n         * it will trigger immediately. You can safely ignore the value, as it will always be\n         * StompState.CONNECTED\n         * @return {?}\n         */\n        function () {\n            return this.connected$.pipe(map(function (st) {\n                return StompRService._mapStompState(st);\n            }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StompRService.prototype, \"serverHeadersObservable\", {\n        /**\n         * Provides headers from most recent connection to the server as return by the CONNECTED\n         * frame.\n         * If the STOMP connection has already been established it will trigger immediately.\n         * It will additionally trigger in event of reconnection, the value will be set of headers from\n         * the recent server response.\n         */\n        get: /**\n         * Provides headers from most recent connection to the server as return by the CONNECTED\n         * frame.\n         * If the STOMP connection has already been established it will trigger immediately.\n         * It will additionally trigger in event of reconnection, the value will be set of headers from\n         * the recent server response.\n         * @return {?}\n         */\n        function () {\n            return this.serverHeaders$;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StompRService.prototype, \"defaultMessagesObservable\", {\n        /**\n         * Will emit all messages to the default queue (any message that are not handled by a subscription)\n         */\n        get: /**\n         * Will emit all messages to the default queue (any message that are not handled by a subscription)\n         * @return {?}\n         */\n        function () {\n            return this.unhandledMessage$;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StompRService.prototype, \"receiptsObservable\", {\n        /**\n         * Will emit all receipts\n         */\n        get: /**\n         * Will emit all receipts\n         * @return {?}\n         */\n        function () {\n            return this.unhandledReceipts$;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StompRService.prototype, \"errorSubject\", {\n        /**\n         * Will trigger when an error occurs. This Subject can be used to handle errors from\n         * the stomp broker.\n         */\n        get: /**\n         * Will trigger when an error occurs. This Subject can be used to handle errors from\n         * the stomp broker.\n         * @return {?}\n         */\n        function () {\n            return this.stompErrors$;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StompRService.prototype, \"config\", {\n        /** Set configuration */\n        set: /**\n         * Set configuration\n         * @param {?} config\n         * @return {?}\n         */\n        function (config) {\n            var /** @type {?} */ rxStompConfig = {};\n            if (typeof (config.url) === 'string') {\n                rxStompConfig.brokerURL = config.url;\n            }\n            else {\n                rxStompConfig.webSocketFactory = config.url;\n            }\n            // Configure client heart-beating\n            rxStompConfig.heartbeatIncoming = config.heartbeat_in;\n            rxStompConfig.heartbeatOutgoing = config.heartbeat_out;\n            // Auto reconnect\n            rxStompConfig.reconnectDelay = config.reconnect_delay;\n            if (config.debug) {\n                rxStompConfig.debug = function (str) {\n                    console.log(new Date(), str);\n                };\n            }\n            rxStompConfig.connectHeaders = config.headers;\n            this.configure(rxStompConfig);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * It will connect to the STOMP broker.\n     * @return {?}\n     */\n    StompRService.prototype.initAndConnect = /**\n     * It will connect to the STOMP broker.\n     * @return {?}\n     */\n    function () {\n        // disconnect if connected\n        this.deactivate();\n        // Attempt connection, passing in a callback\n        this.activate();\n    };\n    /**\n     * It will disconnect from the STOMP broker.\n     * @return {?}\n     */\n    StompRService.prototype.disconnect = /**\n     * It will disconnect from the STOMP broker.\n     * @return {?}\n     */\n    function () {\n        this.deactivate();\n    };\n    /**\n     * It will send a message to a named destination. The message must be `string`.\n     *\n     * The message will get locally queued if the STOMP broker is not connected. It will attempt to\n     * publish queued messages as soon as the broker gets connected.\n     *\n     * @param {?} queueName\n     * @param {?=} message\n     * @param {?=} headers\n     * @return {?}\n     */\n    StompRService.prototype.publish = /**\n     * It will send a message to a named destination. The message must be `string`.\n     *\n     * The message will get locally queued if the STOMP broker is not connected. It will attempt to\n     * publish queued messages as soon as the broker gets connected.\n     *\n     * @param {?} queueName\n     * @param {?=} message\n     * @param {?=} headers\n     * @return {?}\n     */\n    function (queueName, message, headers) {\n        if (headers === void 0) { headers = {}; }\n        if (typeof queueName === 'string') {\n            _super.prototype.publish.call(this, { destination: /** @type {?} */ (queueName), body: message, headers: headers });\n        }\n        else {\n            var /** @type {?} */ pubParams = queueName;\n            _super.prototype.publish.call(this, pubParams);\n        }\n    };\n    /**\n     * It will subscribe to server message queues\n     *\n     * This method can be safely called even if the STOMP broker is not connected.\n     * If the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\n     *\n     * If a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\n     * do not understand what it means, please leave it as is.\n     *\n     * Note that when working with temporary queues where the subscription request\n     * creates the\n     * underlying queue, mssages might be missed during reconnect. This issue is not specific\n     * to this library but the way STOMP brokers are designed to work.\n     *\n     * @param {?} queueName\n     * @param {?=} headers\n     * @return {?}\n     */\n    StompRService.prototype.subscribe = /**\n     * It will subscribe to server message queues\n     *\n     * This method can be safely called even if the STOMP broker is not connected.\n     * If the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\n     *\n     * If a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\n     * do not understand what it means, please leave it as is.\n     *\n     * Note that when working with temporary queues where the subscription request\n     * creates the\n     * underlying queue, mssages might be missed during reconnect. This issue is not specific\n     * to this library but the way STOMP brokers are designed to work.\n     *\n     * @param {?} queueName\n     * @param {?=} headers\n     * @return {?}\n     */\n    function (queueName, headers) {\n        if (headers === void 0) { headers = {}; }\n        return this.watch(queueName, headers);\n    };\n    /**\n     * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n     * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n     * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n     * random number or a combination may be used.\n     *\n     * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n     * The operation needs to be matched based in the value of the receipt-id.\n     *\n     * This method allow watching for a receipt and invoke the callback\n     * when corresponding receipt has been received.\n     *\n     * The actual {\\@link Frame}\n     * will be passed as parameter to the callback.\n     *\n     * Example:\n     * ```javascript\n     *        // Publishing with acknowledgement\n     *        let receiptId = randomText();\n     *\n     *        rxStomp.waitForReceipt(receiptId, function() {\n     *          // Will be called after server acknowledges\n     *        });\n     *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n     * ```\n     *\n     * Maps to: [Client#watchForReceipt]{\\@link Client#watchForReceipt}\n     * @param {?} receiptId\n     * @param {?} callback\n     * @return {?}\n     */\n    StompRService.prototype.waitForReceipt = /**\n     * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n     * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n     * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n     * random number or a combination may be used.\n     *\n     * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n     * The operation needs to be matched based in the value of the receipt-id.\n     *\n     * This method allow watching for a receipt and invoke the callback\n     * when corresponding receipt has been received.\n     *\n     * The actual {\\@link Frame}\n     * will be passed as parameter to the callback.\n     *\n     * Example:\n     * ```javascript\n     *        // Publishing with acknowledgement\n     *        let receiptId = randomText();\n     *\n     *        rxStomp.waitForReceipt(receiptId, function() {\n     *          // Will be called after server acknowledges\n     *        });\n     *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n     * ```\n     *\n     * Maps to: [Client#watchForReceipt]{\\@link Client#watchForReceipt}\n     * @param {?} receiptId\n     * @param {?} callback\n     * @return {?}\n     */\n    function (receiptId, callback) {\n        _super.prototype.watchForReceipt.call(this, receiptId, callback);\n    };\n    Object.defineProperty(StompRService.prototype, \"client\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._stompClient;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StompRService.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    StompRService.ctorParameters = function () { return []; };\n    return StompRService;\n}(RxStomp));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Part of `\\@stomp/ng2-stompjs`.\n *\n * **This class has been deprecated in favor of {\\@link InjectableRxStompConfig}.\n * It will be dropped `\\@stomp/ng2-stompjs\\@8.x.x`.**\n *\n * Represents a configuration object for the\n * STOMPService to connect to.\n */\nvar StompConfig = /** @class */ (function () {\n    function StompConfig() {\n    }\n    StompConfig.decorators = [\n        { type: Injectable }\n    ];\n    return StompConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Part of `\\@stomp/ng2-stompjs`.\n *\n * **This class has been deprecated in favor of {\\@link RxStompService} with {\\@link rxStompServiceFactory}.\n * It will be dropped `\\@stomp/ng2-stompjs\\@8.x.x`.**\n *\n * Angular2 STOMP Service using \\@stomp/stomp.js\n *\n * \\@description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\nvar StompService = /** @class */ (function (_super) {\n    __extends(StompService, _super);\n    function StompService(config) {\n        var _this = _super.call(this) || this;\n        _this.config = config;\n        _this.initAndConnect();\n        return _this;\n    }\n    StompService.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    StompService.ctorParameters = function () { return [\n        { type: StompConfig, },\n    ]; };\n    return StompService;\n}(StompRService));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Part of `\\@stomp/ng2-stompjs`.\n *\n * This class is Injectable version of {\\@link RxStomp} with exactly same functionality.\n * Please see {\\@link RxStomp} for details.\n *\n * See: {\\@link /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n *\n * See also {\\@link rxStompServiceFactory}.\n */\nvar RxStompService = /** @class */ (function (_super) {\n    __extends(RxStompService, _super);\n    function RxStompService() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RxStompService.decorators = [\n        { type: Injectable }\n    ];\n    return RxStompService;\n}(RxStomp));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Part of `\\@stomp/ng2-stompjs`.\n *\n * Injectable version of {\\@link RxStompRPCConfig}.\n *\n * See guide at {\\@link /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html}\n */\nvar InjectableRxStompRPCConfig = /** @class */ (function (_super) {\n    __extends(InjectableRxStompRPCConfig, _super);\n    function InjectableRxStompRPCConfig() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    InjectableRxStompRPCConfig.decorators = [\n        { type: Injectable }\n    ];\n    return InjectableRxStompRPCConfig;\n}(RxStompRPCConfig));\n/**\n * Deprecated, use {\\@link InjectableRxStompRPCConfig} instead\n */\nvar /** @type {?} */ InjectableRxStompRpcConfig = InjectableRxStompRPCConfig;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Part of `\\@stomp/ng2-stompjs`.\n *\n * Injectable version of {\\@link RxStompRPC}.\n *\n * See guide at {\\@link /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html}\n */\nvar RxStompRPCService = /** @class */ (function (_super) {\n    __extends(RxStompRPCService, _super);\n    function RxStompRPCService(rxStomp, stompRPCConfig) {\n        return _super.call(this, rxStomp, stompRPCConfig) || this;\n    }\n    RxStompRPCService.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    RxStompRPCService.ctorParameters = function () { return [\n        { type: RxStompService, },\n        { type: InjectableRxStompRPCConfig, decorators: [{ type: Optional },] },\n    ]; };\n    return RxStompRPCService;\n}(RxStompRPC));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Part of `\\@stomp/ng2-stompjs`.\n *\n * This class is Injectable version of {\\@link RxStompConfig} with exactly same functionality.\n * Please see {\\@link RxStompConfig} for details.\n *\n * See: {\\@link /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n *\n * If all fields of configuration are fixed and known in advance you would typically define\n * a `const` and inject it using value.\n *\n * If some fields will be known by later, it can be injected using a factory function.\n *\n * Occasionally it may need to be combined with Angular's APP_INITIALIZER mechanism.\n */\nvar InjectableRxStompConfig = /** @class */ (function (_super) {\n    __extends(InjectableRxStompConfig, _super);\n    function InjectableRxStompConfig() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    InjectableRxStompConfig.decorators = [\n        { type: Injectable }\n    ];\n    return InjectableRxStompConfig;\n}(RxStompConfig));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Part of `\\@stomp/ng2-stompjs`.\n *\n * This is factory function that can create {\\@link RxStompService}\n * when configuration is already known.\n * You can use this function for defining provider for {\\@link RxStompService}.\n * {\\@link RxStompService} created using this function is configured and activated.\n * This provides the simplest mechanism to define {\\@link RxStompService} for Dependency Injection.\n *\n * See: {\\@link /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n * @param {?} rxStompConfig\n * @return {?}\n */\nfunction rxStompServiceFactory(rxStompConfig) {\n    var /** @type {?} */ rxStompService = new RxStompService();\n    rxStompService.configure(rxStompConfig);\n    rxStompService.activate();\n    return rxStompService;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { StompRService, StompService, StompState, StompConfig, RxStompRPCService, RxStompService, InjectableRxStompConfig, InjectableRxStompRPCConfig, InjectableRxStompRpcConfig, rxStompServiceFactory };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@stomp/stompjs\"), require(\"rxjs\"), require(\"rxjs/operators\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"RxStomp\", [\"@stomp/stompjs\", \"rxjs\", \"rxjs/operators\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RxStomp\"] = factory(require(\"@stomp/stompjs\"), require(\"rxjs\"), require(\"rxjs/operators\"));\n\telse\n\t\troot[\"RxStomp\"] = factory(root[\"StompJs\"], root[\"rxjs\"], root[\"rxjs\"][\"operators\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__stomp_stompjs__, __WEBPACK_EXTERNAL_MODULE_rxjs__, __WEBPACK_EXTERNAL_MODULE_rxjs_operators__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./node_modules/angular2-uuid/index.js\":\n/*!*********************************************!*\\\n  !*** ./node_modules/angular2-uuid/index.js ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar UUID = (function () {\n    function UUID() {\n        // no-op\n    }\n    UUID.UUID = function () {\n        if (typeof (window) !== \"undefined\" && typeof (window.crypto) !== \"undefined\" && typeof (window.crypto.getRandomValues) !== \"undefined\") {\n            // If we have a cryptographically secure PRNG, use that\n            // http://stackoverflow.com/questions/6906916/collisions-when-generating-uuids-in-javascript\n            var buf = new Uint16Array(8);\n            window.crypto.getRandomValues(buf);\n            return (this.pad4(buf[0]) + this.pad4(buf[1]) + \"-\" + this.pad4(buf[2]) + \"-\" + this.pad4(buf[3]) + \"-\" + this.pad4(buf[4]) + \"-\" + this.pad4(buf[5]) + this.pad4(buf[6]) + this.pad4(buf[7]));\n        }\n        else {\n            // Otherwise, just use Math.random\n            // https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n            // https://stackoverflow.com/questions/11605068/why-does-jshint-argue-against-bitwise-operators-how-should-i-express-this-code\n            return this.random4() + this.random4() + \"-\" + this.random4() + \"-\" + this.random4() + \"-\" +\n                this.random4() + \"-\" + this.random4() + this.random4() + this.random4();\n        }\n    };\n    UUID.pad4 = function (num) {\n        var ret = num.toString(16);\n        while (ret.length < 4) {\n            ret = \"0\" + ret;\n        }\n        return ret;\n    };\n    UUID.random4 = function () {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    };\n    return UUID;\n}());\nexports.UUID = UUID;\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ \"./src/index.ts\":\n/*!**********************!*\\\n  !*** ./src/index.ts ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(/*! ./rx-stomp-config */ \"./src/rx-stomp-config.ts\"));\n__export(__webpack_require__(/*! ./rx-stomp */ \"./src/rx-stomp.ts\"));\n__export(__webpack_require__(/*! ./rx-stomp-state */ \"./src/rx-stomp-state.ts\"));\n__export(__webpack_require__(/*! ./rx-stomp-rpc-config */ \"./src/rx-stomp-rpc-config.ts\"));\n__export(__webpack_require__(/*! ./rx-stomp-rpc */ \"./src/rx-stomp-rpc.ts\"));\n\n\n/***/ }),\n\n/***/ \"./src/rx-stomp-config.ts\":\n/*!********************************!*\\\n  !*** ./src/rx-stomp-config.ts ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Represents a configuration object for RxSTOMP.\n * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n *\n * All the attributes of this calls are optional.\n *\n * Part of `@stomp/rx-stomp`\n */\nvar RxStompConfig = /** @class */ (function () {\n    function RxStompConfig() {\n    }\n    return RxStompConfig;\n}());\nexports.RxStompConfig = RxStompConfig;\n\n\n/***/ }),\n\n/***/ \"./src/rx-stomp-rpc-config.ts\":\n/*!************************************!*\\\n  !*** ./src/rx-stomp-rpc-config.ts ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * RPC Config. See the guide for example.\n */\nvar RxStompRPCConfig = /** @class */ (function () {\n    function RxStompRPCConfig() {\n    }\n    return RxStompRPCConfig;\n}());\nexports.RxStompRPCConfig = RxStompRPCConfig;\n\n\n/***/ }),\n\n/***/ \"./src/rx-stomp-rpc.ts\":\n/*!*****************************!*\\\n  !*** ./src/rx-stomp-rpc.ts ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = __webpack_require__(/*! rxjs */ \"rxjs\");\nvar operators_1 = __webpack_require__(/*! rxjs/operators */ \"rxjs/operators\");\nvar angular2_uuid_1 = __webpack_require__(/*! angular2-uuid */ \"./node_modules/angular2-uuid/index.js\");\n/**\n * An implementation of Remote Procedure Call (RPC) using messaging.\n *\n * Please see the [guide](/guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html) for details.\n *\n * Part of `@stomp/rx-stomp`\n */\nvar RxStompRPC = /** @class */ (function () {\n    /**\n     * Create an instance, see the [guide](/guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html) for details.\n     */\n    function RxStompRPC(rxStomp, stompRPCConfig) {\n        var _this = this;\n        this.rxStomp = rxStomp;\n        this.stompRPCConfig = stompRPCConfig;\n        this._replyQueueName = '/temp-queue/rpc-replies';\n        this._setupReplyQueue = function () {\n            return _this.rxStomp.unhandledMessage$;\n        };\n        if (stompRPCConfig) {\n            if (stompRPCConfig.replyQueueName) {\n                this._replyQueueName = stompRPCConfig.replyQueueName;\n            }\n            if (stompRPCConfig.setupReplyQueue) {\n                this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n            }\n        }\n    }\n    /**\n     * Make an RPC request.\n     * See the [guide](/guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html) for example.\n     *\n     * It is a simple wrapper around [RxStompRPC#stream]{@link RxStompRPC#stream}.\n     */\n    RxStompRPC.prototype.rpc = function (params) {\n        // We know there will be only one message in reply\n        return this.stream(params).pipe(operators_1.first());\n    };\n    /**\n     * Make an RPC stream request. See the [guide](/guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html).\n     *\n     * Note: This call internally takes care of generating a correlation id,\n     * however, if `correlation-id` is passed via `headers`, that will be used instead.\n     */\n    RxStompRPC.prototype.stream = function (params) {\n        var _this = this;\n        var headers = Object.assign({}, params.headers || {});\n        var destination = params.destination, body = params.body, binaryBody = params.binaryBody;\n        if (!this._repliesObservable) {\n            this._repliesObservable = this._setupReplyQueue(this._replyQueueName, this.rxStomp);\n        }\n        return rxjs_1.Observable.create(function (rpcObserver) {\n            var defaultMessagesSubscription;\n            var correlationId = headers['correlation-id'] || angular2_uuid_1.UUID.UUID();\n            defaultMessagesSubscription = _this._repliesObservable.pipe(operators_1.filter(function (message) {\n                return message.headers['correlation-id'] === correlationId;\n            })).subscribe(function (message) {\n                rpcObserver.next(message);\n            });\n            // send an RPC request\n            headers['reply-to'] = _this._replyQueueName;\n            headers['correlation-id'] = correlationId;\n            _this.rxStomp.publish({ destination: destination, body: body, binaryBody: binaryBody, headers: headers });\n            return function () {\n                defaultMessagesSubscription.unsubscribe();\n            };\n        });\n    };\n    return RxStompRPC;\n}());\nexports.RxStompRPC = RxStompRPC;\n\n\n/***/ }),\n\n/***/ \"./src/rx-stomp-state.ts\":\n/*!*******************************!*\\\n  !*** ./src/rx-stomp-state.ts ***!\n  \\*******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Possible states for the RxStomp\n *\n * Part of `@stomp/rx-stomp`\n */\nvar RxStompState;\n(function (RxStompState) {\n    RxStompState[RxStompState[\"CONNECTING\"] = 0] = \"CONNECTING\";\n    RxStompState[RxStompState[\"OPEN\"] = 1] = \"OPEN\";\n    RxStompState[RxStompState[\"CLOSING\"] = 2] = \"CLOSING\";\n    RxStompState[RxStompState[\"CLOSED\"] = 3] = \"CLOSED\";\n})(RxStompState = exports.RxStompState || (exports.RxStompState = {}));\n\n\n/***/ }),\n\n/***/ \"./src/rx-stomp.ts\":\n/*!*************************!*\\\n  !*** ./src/rx-stomp.ts ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = __webpack_require__(/*! rxjs */ \"rxjs\");\nvar operators_1 = __webpack_require__(/*! rxjs/operators */ \"rxjs/operators\");\nvar stompjs_1 = __webpack_require__(/*! @stomp/stompjs */ \"@stomp/stompjs\");\nvar rx_stomp_state_1 = __webpack_require__(/*! ./rx-stomp-state */ \"./src/rx-stomp-state.ts\");\n/**\n * This is the main Stomp Client.\n * Typically you will create an instance of this to connect to the STOMP broker.\n *\n * This wraps [@stomp/stompjs]{@link https://github.com/stomp-js/stompjs}\n * {@link Client} class.\n *\n * The key difference is that it exposes operations as RxJS Observables.\n * For example when a STOMP endpoint is subscribed it returns an Observable\n * that will stream all received messages.\n *\n * With exception of beforeConnect, functionality related to all callbacks in\n * [@stomp/stompjs Client]{@link Client}\n * is exposed as Observables/Subjects/BehaviorSubjects.\n *\n * RxStomp also tries to transparently handle connection failures.\n *\n * Part of `@stomp/rx-stomp`\n */\nvar RxStomp = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function RxStomp() {\n        var _this = this;\n        /**\n         * Internal array to hold locally queued messages when STOMP broker is not connected.\n         */\n        this._queuedMessages = [];\n        this._stompClient = new stompjs_1.Client();\n        var noOp = function () { };\n        // Before connect is no op by default\n        this._beforeConnect = noOp;\n        // debug is no-op by default\n        this._debug = noOp;\n        // Initial state is CLOSED\n        this._connectionStatePre$ = new rxjs_1.BehaviorSubject(rx_stomp_state_1.RxStompState.CLOSED);\n        this._connectedPre$ = this._connectionStatePre$.pipe(operators_1.filter(function (currentState) {\n            return currentState === rx_stomp_state_1.RxStompState.OPEN;\n        }));\n        // Initial state is CLOSED\n        this.connectionState$ = new rxjs_1.BehaviorSubject(rx_stomp_state_1.RxStompState.CLOSED);\n        this.connected$ = this.connectionState$.pipe(operators_1.filter(function (currentState) {\n            return currentState === rx_stomp_state_1.RxStompState.OPEN;\n        }));\n        // Setup sending queuedMessages\n        this.connected$.subscribe(function () {\n            _this._sendQueuedMessages();\n        });\n        this._serverHeadersBehaviourSubject$ = new rxjs_1.BehaviorSubject(null);\n        this.serverHeaders$ = this._serverHeadersBehaviourSubject$.pipe(operators_1.filter(function (headers) {\n            return headers !== null;\n        }));\n        this.stompErrors$ = new rxjs_1.Subject();\n        this.unhandledMessage$ = new rxjs_1.Subject();\n        this.unhandledReceipts$ = new rxjs_1.Subject();\n        this.unhandledFrame$ = new rxjs_1.Subject();\n        this.webSocketErrors$ = new rxjs_1.Subject();\n    }\n    Object.defineProperty(RxStomp.prototype, \"stompClient\", {\n        /**\n         * Instance of actual\n         * [@stomp/stompjs]{@link https://github.com/stomp-js/stompjs}\n         * {@link Client}.\n         *\n         * **Be careful in calling methods on it directly - you may get unintended consequences.**\n         */\n        get: function () {\n            return this._stompClient;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Set configuration. This method may be called multiple times.\n     * Each call will add to the existing configuration.\n     *\n     * Example:\n     *\n     * ```javascript\n     *        const rxStomp = new RxStomp();\n     *        rxStomp.configure({\n     *          brokerURL: 'ws://127.0.0.1:15674/ws',\n     *          connectHeaders: {\n     *            login: 'guest',\n     *            passcode: 'guest'\n     *          },\n     *          heartbeatIncoming: 0,\n     *          heartbeatOutgoing: 20000,\n     *          reconnectDelay: 200,\n     *          debug: (msg: string): void => {\n     *            console.log(new Date(), msg);\n     *          }\n     *        });\n     *        rxStomp.activate();\n     * ```\n     *\n     * Maps to: [Client#configure]{@link Client#configure}\n     */\n    RxStomp.prototype.configure = function (rxStompConfig) {\n        var stompConfig = Object.assign({}, rxStompConfig);\n        if (stompConfig.beforeConnect) {\n            this._beforeConnect = stompConfig.beforeConnect;\n            delete stompConfig.beforeConnect;\n        }\n        // RxStompConfig has subset of StompConfig fields\n        this._stompClient.configure(stompConfig);\n        if (stompConfig.debug) {\n            this._debug = stompConfig.debug;\n        }\n    };\n    /**\n     * Initiate the connection with the broker.\n     * If the connection breaks, as per [RxStompConfig#reconnectDelay]{@link RxStompConfig#reconnectDelay},\n     * it will keep trying to reconnect.\n     *\n     * Call [RxStomp#deactivate]{@link RxStomp#deactivate} to disconnect and stop reconnection attempts.\n     *\n     * Maps to: [Client#activate]{@link Client#activate}\n     */\n    RxStomp.prototype.activate = function () {\n        var _this = this;\n        this._stompClient.configure({\n            beforeConnect: function () { return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            this._changeState(rx_stomp_state_1.RxStompState.CONNECTING);\n                            // Call handler\n                            return [4 /*yield*/, this._beforeConnect(this)];\n                        case 1:\n                            // Call handler\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            }); },\n            onConnect: function (frame) {\n                _this._serverHeadersBehaviourSubject$.next(frame.headers);\n                // Indicate our connected state to observers\n                _this._changeState(rx_stomp_state_1.RxStompState.OPEN);\n            },\n            onStompError: function (frame) {\n                // Trigger the frame subject\n                _this.stompErrors$.next(frame);\n            },\n            onWebSocketClose: function () {\n                _this._changeState(rx_stomp_state_1.RxStompState.CLOSED);\n            },\n            onUnhandledMessage: function (message) {\n                _this.unhandledMessage$.next(message);\n            },\n            onUnhandledReceipt: function (frame) {\n                _this.unhandledReceipts$.next(frame);\n            },\n            onUnhandledFrame: function (frame) {\n                _this.unhandledFrame$.next(frame);\n            },\n            onWebSocketError: function (evt) {\n                _this.webSocketErrors$.next(evt);\n            }\n        });\n        // Attempt connection\n        this._stompClient.activate();\n    };\n    /**\n     * Disconnect if connected and stop auto reconnect loop.\n     * Appropriate callbacks will be invoked if underlying STOMP connection was connected.\n     *\n     * To reactivate you can call [RxStomp#activate]{@link RxStomp#activate}.\n     *\n     * Maps to: [Client#deactivate]{@link Client#deactivate}\n     */\n    RxStomp.prototype.deactivate = function () {\n        // Disconnect if connected. Callback will set CLOSED state\n        this._stompClient.deactivate();\n        var stompState = this.connectionState$.getValue();\n        if (stompState === rx_stomp_state_1.RxStompState.OPEN) {\n            // Notify observers that we are disconnecting!\n            this._changeState(rx_stomp_state_1.RxStompState.CLOSING);\n        }\n        // This is bit tricky situation, it would be better handled at stompjs level\n        if (stompState === rx_stomp_state_1.RxStompState.CONNECTING) {\n            // Notify observers that we are disconnecting!\n            this._changeState(rx_stomp_state_1.RxStompState.CLOSED);\n        }\n    };\n    /**\n     * It will return `true` if STOMP broker is connected and `false` otherwise.\n     */\n    RxStomp.prototype.connected = function () {\n        return this.connectionState$.getValue() === rx_stomp_state_1.RxStompState.OPEN;\n    };\n    Object.defineProperty(RxStomp.prototype, \"active\", {\n        /**\n         * If the client is active (connected or going to reconnect).\n         *\n         *  Maps to: [Client#active]{@link Client#active}\n         */\n        get: function () {\n            return this.stompClient.active;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Send a message to a named destination. Refer to your STOMP broker documentation for types\n     * and naming of destinations.\n     *\n     * STOMP protocol specifies and suggests some headers and also allows broker specific headers.\n     *\n     * `body` must be String.\n     * You will need to covert the payload to string in case it is not string (e.g. JSON).\n     *\n     * To send a binary message body use binaryBody parameter. It should be a\n     * [Uint8Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array).\n     * Sometimes brokers may not support binary frames out of the box.\n     * Please check your broker documentation.\n     *\n     * `content-length` header is automatically added to the STOMP Frame sent to the broker.\n     * Set `skipContentLengthHeader` to indicate that `content-length` header should not be added.\n     * For binary messages `content-length` header is always added.\n     *\n     * Caution: The broker will, most likely, report an error and disconnect if message body has NULL octet(s)\n     * and `content-length` header is missing.\n     *\n     * The message will get locally queued if the STOMP broker is not connected. It will attempt to\n     * publish queued messages as soon as the broker gets connected.\n     * If you do not want that behavior,\n     * please set [retryIfDisconnected]{@link IRxStompPublishParams#retryIfDisconnected} to `false`\n     * in the parameters.\n     * When `false`, this function will raise an error if message could not be sent immediately.\n     *\n     * Maps to: [Client#publish]{@link Client#publish}\n     *\n     * See: {@link IRxStompPublishParams} and {@link IPublishParams}\n     *\n     * ```javascript\n     *        rxStomp.publish({destination: \"/queue/test\", headers: {priority: 9}, body: \"Hello, STOMP\"});\n     *\n     *        // Only destination is mandatory parameter\n     *        rxStomp.publish({destination: \"/queue/test\", body: \"Hello, STOMP\"});\n     *\n     *        // Skip content-length header in the frame to the broker\n     *        rxStomp.publish({\"/queue/test\", body: \"Hello, STOMP\", skipContentLengthHeader: true});\n     *\n     *        var binaryData = generateBinaryData(); // This need to be of type Uint8Array\n     *        // setting content-type header is not mandatory, however a good practice\n     *        rxStomp.publish({destination: '/topic/special', binaryBody: binaryData,\n     *                         headers: {'content-type': 'application/octet-stream'}});\n     * ```\n     */\n    RxStomp.prototype.publish = function (parameters) {\n        // retry behaviour is defaulted to true\n        var shouldRetry = parameters.retryIfDisconnected == null\n            ? true\n            : parameters.retryIfDisconnected;\n        if (this.connected()) {\n            this._stompClient.publish(parameters);\n        }\n        else if (shouldRetry) {\n            this._debug(\"Not connected, queueing\");\n            this._queuedMessages.push(parameters);\n        }\n        else {\n            throw new Error('Cannot publish while broker is not connected');\n        }\n    };\n    /** It will send queued messages. */\n    RxStomp.prototype._sendQueuedMessages = function () {\n        var queuedMessages = this._queuedMessages;\n        this._queuedMessages = [];\n        if (queuedMessages.length === 0) {\n            return;\n        }\n        this._debug(\"Will try sending  \" + queuedMessages.length + \" queued message(s)\");\n        for (var _i = 0, queuedMessages_1 = queuedMessages; _i < queuedMessages_1.length; _i++) {\n            var queuedMessage = queuedMessages_1[_i];\n            this._debug(\"Attempting to send \" + queuedMessage);\n            this.publish(queuedMessage);\n        }\n    };\n    /**\n     * It will subscribe to server message queues\n     *\n     * This method can be safely called even if the STOMP broker is not connected.\n     * If the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\n     *\n     * Note that messages might be missed during reconnect. This issue is not specific\n     * to this library but the way STOMP brokers are designed to work.\n     *\n     * This method in the underlying library is called `subscribe`.\n     * In earlier version it was called `subscribe` here as well.\n     * However `subscribe` is also used by RxJS and code read quite strange with two subscribe calls\n     * following each other and both meaning very different things.\n     *\n     * Maps to: [Client#subscribe]{@link Client#subscribe}\n     */\n    RxStomp.prototype.watch = function (destination, headers) {\n        var _this = this;\n        if (headers === void 0) { headers = {}; }\n        /* Well the logic is complicated but works beautifully. RxJS is indeed wonderful.\n         *\n         * We need to activate the underlying subscription immediately if Stomp is connected. If not it should\n         * subscribe when it gets next connected. Further it should re establish the subscription whenever Stomp\n         * successfully reconnects.\n         *\n         * Actual implementation is simple, we filter the BehaviourSubject 'state' so that we can trigger whenever Stomp is\n         * connected. Since 'state' is a BehaviourSubject, if Stomp is already connected, it will immediately trigger.\n         *\n         * The observable that we return to caller remains same across all reconnects, so no special handling needed at\n         * the message subscriber.\n         */\n        this._debug(\"Request to subscribe \" + destination);\n        // By default auto acknowledgement of messages\n        if (!headers.ack) {\n            headers.ack = 'auto';\n        }\n        var coldObservable = rxjs_1.Observable.create(function (messages) {\n            /*\n             * These variables will be used as part of the closure and work their magic during unsubscribe\n             */\n            var stompSubscription;\n            var stompConnectedSubscription;\n            stompConnectedSubscription = _this._connectedPre$.subscribe(function () {\n                _this._debug(\"Will subscribe to \" + destination);\n                stompSubscription = _this._stompClient.subscribe(destination, function (message) {\n                    messages.next(message);\n                }, headers);\n            });\n            return function () {\n                _this._debug(\"Stop watching connection state (for \" + destination + \")\");\n                stompConnectedSubscription.unsubscribe();\n                if (_this.connected()) {\n                    _this._debug(\"Will unsubscribe from \" + destination + \" at Stomp\");\n                    stompSubscription.unsubscribe();\n                }\n                else {\n                    _this._debug(\"Stomp not connected, no need to unsubscribe from \" + destination + \" at Stomp\");\n                }\n            };\n        });\n        /**\n         * Important - convert it to hot Observable - otherwise, if the user code subscribes\n         * to this observable twice, it will subscribe twice to Stomp broker. (This was happening in the current example).\n         * A long but good explanatory article at https://medium.com/@benlesh/hot-vs-cold-observables-f8094ed53339\n         */\n        return coldObservable.pipe(operators_1.share());\n    };\n    /**\n     * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n     * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n     * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n     * random number or a combination may be used.\n     *\n     * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n     * The operation needs to be matched based in the value of the receipt-id.\n     *\n     * This method allow watching for a receipt and invoke the callback\n     * when corresponding receipt has been received.\n     *\n     * The actual {@link Frame}\n     * will be passed as parameter to the callback.\n     *\n     * Example:\n     * ```javascript\n     *        // Publishing with acknowledgement\n     *        let receiptId = randomText();\n     *\n     *        rxStomp.watchForReceipt(receiptId, function() {\n     *          // Will be called after server acknowledges\n     *        });\n     *        rxStomp.publish({destination: '/topic/special', headers: {receipt: receiptId}, body: msg});\n     * ```\n     *\n     * Maps to: [Client#watchForReceipt]{@link Client#watchForReceipt}\n     */\n    RxStomp.prototype.watchForReceipt = function (receiptId, callback) {\n        this._stompClient.watchForReceipt(receiptId, callback);\n    };\n    RxStomp.prototype._changeState = function (state) {\n        this._connectionStatePre$.next(state);\n        this.connectionState$.next(state);\n    };\n    return RxStomp;\n}());\nexports.RxStomp = RxStomp;\n\n\n/***/ }),\n\n/***/ 0:\n/*!****************************!*\\\n  !*** multi ./src/index.ts ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(/*! /home/kdeepak/MyWork/Tech/stomp/rx-stomp/src/index.ts */\"./src/index.ts\");\n\n\n/***/ }),\n\n/***/ \"@stomp/stompjs\":\n/*!*******************************************************************************************************************!*\\\n  !*** external {\"commonjs\":\"@stomp/stompjs\",\"commonjs2\":\"@stomp/stompjs\",\"amd\":\"@stomp/stompjs\",\"root\":\"StompJs\"} ***!\n  \\*******************************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__stomp_stompjs__;\n\n/***/ }),\n\n/***/ \"rxjs\":\n/*!************************************************************************************!*\\\n  !*** external {\"root\":[\"rxjs\"],\"commonjs\":\"rxjs\",\"commonjs2\":\"rxjs\",\"amd\":\"rxjs\"} ***!\n  \\************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_rxjs__;\n\n/***/ }),\n\n/***/ \"rxjs/operators\":\n/*!******************************************************************************************************************************!*\\\n  !*** external {\"root\":[\"rxjs\",\"operators\"],\"commonjs\":\"rxjs/operators\",\"commonjs2\":\"rxjs/operators\",\"amd\":\"rxjs/operators\"} ***!\n  \\******************************************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_operators__;\n\n/***/ })\n\n/******/ });\n});\n//# sourceMappingURL=rx-stomp.umd.js.map","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"StompJs\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"StompJs\"] = factory();\n\telse\n\t\troot[\"StompJs\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./src/byte.ts\":\n/*!*********************!*\\\n  !*** ./src/byte.ts ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Some byte values, used as per STOMP specifications.\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexports.BYTE = {\n    // LINEFEED byte (octet 10)\n    LF: '\\x0A',\n    // NULL byte (octet 0)\n    NULL: '\\x00'\n};\n\n\n/***/ }),\n\n/***/ \"./src/client.ts\":\n/*!***********************!*\\\n  !*** ./src/client.ts ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar stomp_handler_1 = __webpack_require__(/*! ./stomp-handler */ \"./src/stomp-handler.ts\");\nvar versions_1 = __webpack_require__(/*! ./versions */ \"./src/versions.ts\");\nvar web_socket_state_1 = __webpack_require__(/*! ./web-socket-state */ \"./src/web-socket-state.ts\");\n/**\n * STOMP Client Class.\n *\n * Part of `@stomp/stompjs`.\n */\nvar Client = /** @class */ (function () {\n    /**\n     * Create an instance.\n     */\n    function Client(conf) {\n        if (conf === void 0) { conf = {}; }\n        /**\n         * STOMP versions to attempt during STOMP handshake. By default versions `1.0`, `1.1`, and `1.2` are attempted.\n         *\n         * Example:\n         * ```javascript\n         *        // Try only versions 1.0 and 1.1\n         *        client.stompVersions = new Versions(['1.0', '1.1'])\n         * ```\n         */\n        this.stompVersions = versions_1.Versions.default;\n        /**\n         *  automatically reconnect with delay in milliseconds, set to 0 to disable.\n         */\n        this.reconnectDelay = 5000;\n        /**\n         * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n         */\n        this.heartbeatIncoming = 10000;\n        /**\n         * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n         */\n        this.heartbeatOutgoing = 10000;\n        /**\n         * This switches on a non standard behavior while sending WebSocket packets.\n         * It splits larger (text) packets into chunks of [maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n         * Only Java Spring brokers seems to use this mode.\n         *\n         * WebSockets, by itself, split large (text) packets,\n         * so it is not needed with a truly compliant STOMP/WebSocket broker.\n         * Actually setting it for such broker will cause large messages to fail.\n         *\n         * `false` by default.\n         *\n         * Binary frames are never split.\n         */\n        this.splitLargeFrames = false;\n        /**\n         * See [splitLargeFrames]{@link Client#splitLargeFrames}.\n         * This has no effect if [splitLargeFrames]{@link Client#splitLargeFrames} is `false`.\n         */\n        this.maxWebSocketChunkSize = 8 * 1024;\n        /**\n         * Usually the\n         * [type of WebSocket frame]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send#Parameters}\n         * is automatically decided by type of the payload.\n         * Default is `false`, which should work with all compliant brokers.\n         *\n         * Set this flag to force binary frames.\n         */\n        this.forceBinaryWSFrames = false;\n        /**\n         * A bug in ReactNative chops a string on occurrence of a NULL.\n         * See issue [https://github.com/stomp-js/stompjs/issues/89]{@link https://github.com/stomp-js/stompjs/issues/89}.\n         * This makes incoming WebSocket messages invalid STOMP packets.\n         * Setting this flag attempts to reverse the damage by appending a NULL.\n         * If the broker splits a large message into multiple WebSocket messages,\n         * this flag will cause data loss and abnormal termination of connection.\n         *\n         * This is not an ideal solution, but a stop gap until the underlying issue is fixed at ReactNative library.\n         */\n        this.appendMissingNULLonIncoming = false;\n        this._active = false;\n        // Dummy callbacks\n        var noOp = function () { };\n        this.debug = noOp;\n        this.beforeConnect = noOp;\n        this.onConnect = noOp;\n        this.onDisconnect = noOp;\n        this.onUnhandledMessage = noOp;\n        this.onUnhandledReceipt = noOp;\n        this.onUnhandledFrame = noOp;\n        this.onStompError = noOp;\n        this.onWebSocketClose = noOp;\n        this.onWebSocketError = noOp;\n        this.logRawCommunication = false;\n        // These parameters would typically get proper values before connect is called\n        this.connectHeaders = {};\n        this._disconnectHeaders = {};\n        // Apply configuration\n        this.configure(conf);\n    }\n    Object.defineProperty(Client.prototype, \"webSocket\", {\n        /**\n         * Underlying WebSocket instance, READONLY.\n         */\n        get: function () {\n            return this._webSocket;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Client.prototype, \"disconnectHeaders\", {\n        /**\n         * Disconnection headers.\n         */\n        get: function () {\n            return this._disconnectHeaders;\n        },\n        set: function (value) {\n            this._disconnectHeaders = value;\n            if (this._stompHandler) {\n                this._stompHandler.disconnectHeaders = this._disconnectHeaders;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Client.prototype, \"connected\", {\n        /**\n         * `true` if there is a active connection with STOMP Broker\n         */\n        get: function () {\n            return (!!this._stompHandler) && this._stompHandler.connected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Client.prototype, \"connectedVersion\", {\n        /**\n         * version of STOMP protocol negotiated with the server, READONLY\n         */\n        get: function () {\n            return this._stompHandler ? this._stompHandler.connectedVersion : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Client.prototype, \"active\", {\n        /**\n         * if the client is active (connected or going to reconnect)\n         */\n        get: function () {\n            return this._active;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Update configuration.\n     */\n    Client.prototype.configure = function (conf) {\n        // bulk assign all properties to this\n        Object.assign(this, conf);\n    };\n    /**\n     * Initiate the connection with the broker.\n     * If the connection breaks, as per [Client#reconnectDelay]{@link Client#reconnectDelay},\n     * it will keep trying to reconnect.\n     *\n     * Call [Client#deactivate]{@link Client#deactivate} to disconnect and stop reconnection attempts.\n     */\n    Client.prototype.activate = function () {\n        this._active = true;\n        this._connect();\n    };\n    Client.prototype._connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.connected) {\n                            this.debug('STOMP: already connected, nothing to do');\n                            return [2 /*return*/];\n                        }\n                        return [4 /*yield*/, this.beforeConnect()];\n                    case 1:\n                        _a.sent();\n                        if (!this._active) {\n                            this.debug('Client has been marked inactive, will not attempt to connect');\n                            return [2 /*return*/];\n                        }\n                        this.debug('Opening Web Socket...');\n                        // Get the actual WebSocket (or a similar object)\n                        this._webSocket = this._createWebSocket();\n                        this._stompHandler = new stomp_handler_1.StompHandler(this, this._webSocket, {\n                            debug: this.debug,\n                            stompVersions: this.stompVersions,\n                            connectHeaders: this.connectHeaders,\n                            disconnectHeaders: this._disconnectHeaders,\n                            heartbeatIncoming: this.heartbeatIncoming,\n                            heartbeatOutgoing: this.heartbeatOutgoing,\n                            splitLargeFrames: this.splitLargeFrames,\n                            maxWebSocketChunkSize: this.maxWebSocketChunkSize,\n                            forceBinaryWSFrames: this.forceBinaryWSFrames,\n                            logRawCommunication: this.logRawCommunication,\n                            appendMissingNULLonIncoming: this.appendMissingNULLonIncoming,\n                            onConnect: function (frame) {\n                                if (!_this._active) {\n                                    _this.debug('STOMP got connected while deactivate was issued, will disconnect now');\n                                    _this._disposeStompHandler();\n                                    return;\n                                }\n                                _this.onConnect(frame);\n                            },\n                            onDisconnect: function (frame) {\n                                _this.onDisconnect(frame);\n                            },\n                            onStompError: function (frame) {\n                                _this.onStompError(frame);\n                            },\n                            onWebSocketClose: function (evt) {\n                                _this.onWebSocketClose(evt);\n                                // The callback is called before attempting to reconnect, this would allow the client\n                                // to be `deactivated` in the callback.\n                                if (_this._active) {\n                                    _this._schedule_reconnect();\n                                }\n                            },\n                            onWebSocketError: function (evt) {\n                                _this.onWebSocketError(evt);\n                            },\n                            onUnhandledMessage: function (message) {\n                                _this.onUnhandledMessage(message);\n                            },\n                            onUnhandledReceipt: function (frame) {\n                                _this.onUnhandledReceipt(frame);\n                            },\n                            onUnhandledFrame: function (frame) {\n                                _this.onUnhandledFrame(frame);\n                            }\n                        });\n                        this._stompHandler.start();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Client.prototype._createWebSocket = function () {\n        var webSocket;\n        if (this.webSocketFactory) {\n            webSocket = this.webSocketFactory();\n        }\n        else {\n            webSocket = new WebSocket(this.brokerURL, this.stompVersions.protocolVersions());\n        }\n        webSocket.binaryType = 'arraybuffer';\n        return webSocket;\n    };\n    Client.prototype._schedule_reconnect = function () {\n        var _this = this;\n        if (this.reconnectDelay > 0) {\n            this.debug(\"STOMP: scheduling reconnection in \" + this.reconnectDelay + \"ms\");\n            this._reconnector = setTimeout(function () {\n                _this._connect();\n            }, this.reconnectDelay);\n        }\n    };\n    /**\n     * Disconnect if connected and stop auto reconnect loop.\n     * Appropriate callbacks will be invoked if underlying STOMP connection was connected.\n     *\n     * To reactivate you can call [Client#activate]{@link Client#activate}.\n     */\n    Client.prototype.deactivate = function () {\n        // indicate that auto reconnect loop should terminate\n        this._active = false;\n        // Clear if a reconnection was scheduled\n        if (this._reconnector) {\n            clearTimeout(this._reconnector);\n        }\n        this._disposeStompHandler();\n    };\n    /**\n     * Force disconnect if there is an active connection by directly closing the underlying WebSocket.\n     * This is different than a normal disconnect where a DISCONNECT sequence is carried out with the broker.\n     * After forcing disconnect, automatic reconnect will be attempted.\n     * To stop further reconnects call [Client#deactivate]{@link Client#deactivate} as well.\n     */\n    Client.prototype.forceDisconnect = function () {\n        if (this._webSocket) {\n            if (this._webSocket.readyState === web_socket_state_1.WebSocketState.CONNECTING\n                || this._webSocket.readyState === web_socket_state_1.WebSocketState.OPEN) {\n                this._stompHandler._closeWebsocket();\n            }\n        }\n    };\n    Client.prototype._disposeStompHandler = function () {\n        // Dispose STOMP Handler\n        if (this._stompHandler) {\n            this._stompHandler.dispose();\n            this._stompHandler = null;\n        }\n    };\n    /**\n     * Send a message to a named destination. Refer to your STOMP broker documentation for types\n     * and naming of destinations.\n     *\n     * STOMP protocol specifies and suggests some headers and also allows broker specific headers.\n     *\n     * `body` must be String.\n     * You will need to covert the payload to string in case it is not string (e.g. JSON).\n     *\n     * To send a binary message body use binaryBody parameter. It should be a\n     * [Uint8Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array).\n     * Sometimes brokers may not support binary frames out of the box.\n     * Please check your broker documentation.\n     *\n     * `content-length` header is automatically added to the STOMP Frame sent to the broker.\n     * Set `skipContentLengthHeader` to indicate that `content-length` header should not be added.\n     * For binary messages `content-length` header is always added.\n     *\n     * Caution: The broker will, most likely, report an error and disconnect if message body has NULL octet(s)\n     * and `content-length` header is missing.\n     *\n     * ```javascript\n     *        client.publish({destination: \"/queue/test\", headers: {priority: 9}, body: \"Hello, STOMP\"});\n     *\n     *        // Only destination is mandatory parameter\n     *        client.publish({destination: \"/queue/test\", body: \"Hello, STOMP\"});\n     *\n     *        // Skip content-length header in the frame to the broker\n     *        client.publish({\"/queue/test\", body: \"Hello, STOMP\", skipContentLengthHeader: true});\n     *\n     *        var binaryData = generateBinaryData(); // This need to be of type Uint8Array\n     *        // setting content-type header is not mandatory, however a good practice\n     *        client.publish({destination: '/topic/special', binaryBody: binaryData,\n     *                         headers: {'content-type': 'application/octet-stream'}});\n     * ```\n     */\n    Client.prototype.publish = function (params) {\n        this._stompHandler.publish(params);\n    };\n    /**\n     * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n     * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n     * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n     * random number or a combination may be used.\n     *\n     * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n     * The operation needs to be matched based in the value of the receipt-id.\n     *\n     * This method allow watching for a receipt and invoke the callback\n     * when corresponding receipt has been received.\n     *\n     * The actual {@link FrameImpl} will be passed as parameter to the callback.\n     *\n     * Example:\n     * ```javascript\n     *        // Subscribing with acknowledgement\n     *        let receiptId = randomText();\n     *\n     *        client.watchForReceipt(receiptId, function() {\n     *          // Will be called after server acknowledges\n     *        });\n     *\n     *        client.subscribe(TEST.destination, onMessage, {receipt: receiptId});\n     *\n     *\n     *        // Publishing with acknowledgement\n     *        receiptId = randomText();\n     *\n     *        client.watchForReceipt(receiptId, function() {\n     *          // Will be called after server acknowledges\n     *        });\n     *        client.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n     * ```\n     */\n    Client.prototype.watchForReceipt = function (receiptId, callback) {\n        this._stompHandler.watchForReceipt(receiptId, callback);\n    };\n    /**\n     * Subscribe to a STOMP Broker location. The callback will be invoked for each received message with\n     * the {@link IMessage} as argument.\n     *\n     * Note: The library will generate an unique ID if there is none provided in the headers.\n     *       To use your own ID, pass it using the headers argument.\n     *\n     * ```javascript\n     *        callback = function(message) {\n     *        // called when the client receives a STOMP message from the server\n     *          if (message.body) {\n     *            alert(\"got message with body \" + message.body)\n     *          } else {\n     *            alert(\"got empty message\");\n     *          }\n     *        });\n     *\n     *        var subscription = client.subscribe(\"/queue/test\", callback);\n     *\n     *        // Explicit subscription id\n     *        var mySubId = 'my-subscription-id-001';\n     *        var subscription = client.subscribe(destination, callback, { id: mySubId });\n     * ```\n     */\n    Client.prototype.subscribe = function (destination, callback, headers) {\n        if (headers === void 0) { headers = {}; }\n        return this._stompHandler.subscribe(destination, callback, headers);\n    };\n    /**\n     * It is preferable to unsubscribe from a subscription by calling\n     * `unsubscribe()` directly on {@link StompSubscription} returned by `client.subscribe()`:\n     *\n     * ```javascript\n     *        var subscription = client.subscribe(destination, onmessage);\n     *        // ...\n     *        subscription.unsubscribe();\n     * ```\n     *\n     * See: http://stomp.github.com/stomp-specification-1.2.html#UNSUBSCRIBE UNSUBSCRIBE Frame\n     */\n    Client.prototype.unsubscribe = function (id, headers) {\n        if (headers === void 0) { headers = {}; }\n        this._stompHandler.unsubscribe(id, headers);\n    };\n    /**\n     * Start a transaction, the returned {@link ITransaction} has methods - [commit]{@link ITransaction#commit}\n     * and [abort]{@link ITransaction#abort}.\n     *\n     * `transactionId` is optional, if not passed the library will generate it internally.\n     */\n    Client.prototype.begin = function (transactionId) {\n        return this._stompHandler.begin(transactionId);\n    };\n    /**\n     * Commit a transaction.\n     *\n     * It is preferable to commit a transaction by calling [commit]{@link ITransaction#commit} directly on\n     * {@link ITransaction} returned by [client.begin]{@link Client#begin}.\n     *\n     * ```javascript\n     *        var tx = client.begin(txId);\n     *        //...\n     *        tx.commit();\n     * ```\n     */\n    Client.prototype.commit = function (transactionId) {\n        this._stompHandler.commit(transactionId);\n    };\n    /**\n     * Abort a transaction.\n     * It is preferable to abort a transaction by calling [abort]{@link ITransaction#abort} directly on\n     * {@link ITransaction} returned by [client.begin]{@link Client#begin}.\n     *\n     * ```javascript\n     *        var tx = client.begin(txId);\n     *        //...\n     *        tx.abort();\n     * ```\n     */\n    Client.prototype.abort = function (transactionId) {\n        this._stompHandler.abort(transactionId);\n    };\n    /**\n     * ACK a message. It is preferable to acknowledge a message by calling [ack]{@link IMessage#ack} directly\n     * on the {@link IMessage} handled by a subscription callback:\n     *\n     * ```javascript\n     *        var callback = function (message) {\n     *          // process the message\n     *          // acknowledge it\n     *          message.ack();\n     *        };\n     *        client.subscribe(destination, callback, {'ack': 'client'});\n     * ```\n     */\n    Client.prototype.ack = function (messageId, subscriptionId, headers) {\n        if (headers === void 0) { headers = {}; }\n        this._stompHandler.ack(messageId, subscriptionId, headers);\n    };\n    /**\n     * NACK a message. It is preferable to acknowledge a message by calling [nack]{@link IMessage#nack} directly\n     * on the {@link IMessage} handled by a subscription callback:\n     *\n     * ```javascript\n     *        var callback = function (message) {\n     *          // process the message\n     *          // an error occurs, nack it\n     *          message.nack();\n     *        };\n     *        client.subscribe(destination, callback, {'ack': 'client'});\n     * ```\n     */\n    Client.prototype.nack = function (messageId, subscriptionId, headers) {\n        if (headers === void 0) { headers = {}; }\n        this._stompHandler.nack(messageId, subscriptionId, headers);\n    };\n    return Client;\n}());\nexports.Client = Client;\n\n\n/***/ }),\n\n/***/ \"./src/compatibility/compat-client.ts\":\n/*!********************************************!*\\\n  !*** ./src/compatibility/compat-client.ts ***!\n  \\********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar client_1 = __webpack_require__(/*! ../client */ \"./src/client.ts\");\nvar heartbeat_info_1 = __webpack_require__(/*! ./heartbeat-info */ \"./src/compatibility/heartbeat-info.ts\");\n/**\n * Available for backward compatibility, please shift to using {@link Client}.\n *\n * **Deprecated**\n *\n * Part of `@stomp/stompjs`.\n *\n * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n */\nvar CompatClient = /** @class */ (function (_super) {\n    __extends(CompatClient, _super);\n    /**\n     * Available for backward compatibility, please shift to using {@link Client}\n     * and [Client#webSocketFactory]{@link Client#webSocketFactory}.\n     *\n     * **Deprecated**\n     *\n     * @internal\n     */\n    function CompatClient(webSocketFactory) {\n        var _this = _super.call(this) || this;\n        /**\n         * It is no op now. No longer needed. Large packets work out of the box.\n         */\n        _this.maxWebSocketFrameSize = 16 * 1024;\n        _this._heartbeatInfo = new heartbeat_info_1.HeartbeatInfo(_this);\n        _this.reconnect_delay = 0;\n        _this.webSocketFactory = webSocketFactory;\n        // Default from previous version\n        _this.debug = function () {\n            var message = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                message[_i] = arguments[_i];\n            }\n            console.log.apply(console, message);\n        };\n        return _this;\n    }\n    CompatClient.prototype._parseConnect = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var closeEventCallback;\n        var connectCallback;\n        var errorCallback;\n        var headers = {};\n        if (args.length < 2) {\n            throw new Error(('Connect requires at least 2 arguments'));\n        }\n        if (typeof (args[1]) === 'function') {\n            headers = args[0], connectCallback = args[1], errorCallback = args[2], closeEventCallback = args[3];\n        }\n        else {\n            switch (args.length) {\n                case 6:\n                    headers.login = args[0], headers.passcode = args[1], connectCallback = args[2], errorCallback = args[3], closeEventCallback = args[4], headers.host = args[5];\n                    break;\n                default:\n                    headers.login = args[0], headers.passcode = args[1], connectCallback = args[2], errorCallback = args[3], closeEventCallback = args[4];\n            }\n        }\n        return [headers, connectCallback, errorCallback, closeEventCallback];\n    };\n    /**\n     * Available for backward compatibility, please shift to using [Client#activate]{@link Client#activate}.\n     *\n     * **Deprecated**\n     *\n     * The `connect` method accepts different number of arguments and types. See the Overloads list. Use the\n     * version with headers to pass your broker specific options.\n     *\n     * overloads:\n     * - connect(headers, connectCallback)\n     * - connect(headers, connectCallback, errorCallback)\n     * - connect(login, passcode, connectCallback)\n     * - connect(login, passcode, connectCallback, errorCallback)\n     * - connect(login, passcode, connectCallback, errorCallback, closeEventCallback)\n     * - connect(login, passcode, connectCallback, errorCallback, closeEventCallback, host)\n     *\n     * params:\n     * - headers, see [Client#connectHeaders]{@link Client#connectHeaders}\n     * - connectCallback, see [Client#onConnect]{@link Client#onConnect}\n     * - errorCallback, see [Client#onStompError]{@link Client#onStompError}\n     * - closeEventCallback, see [Client#onWebSocketClose]{@link Client#onWebSocketClose}\n     * - login [String], see [Client#connectHeaders](../classes/Client.html#connectHeaders)\n     * - passcode [String], [Client#connectHeaders](../classes/Client.html#connectHeaders)\n     * - host [String], see [Client#connectHeaders](../classes/Client.html#connectHeaders)\n     *\n     * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n     */\n    CompatClient.prototype.connect = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var out = this._parseConnect.apply(this, args);\n        if (out[0]) {\n            this.connectHeaders = out[0];\n        }\n        if (out[1]) {\n            this.onConnect = out[1];\n        }\n        if (out[2]) {\n            this.onStompError = out[2];\n        }\n        if (out[3]) {\n            this.onWebSocketClose = out[3];\n        }\n        _super.prototype.activate.call(this);\n    };\n    /**\n     * Available for backward compatibility, please shift to using [Client#deactivate]{@link Client#deactivate}.\n     *\n     * **Deprecated**\n     *\n     * See:\n     * [Client#onDisconnect]{@link Client#onDisconnect}, and\n     * [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n     *\n     * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n     */\n    CompatClient.prototype.disconnect = function (disconnectCallback, headers) {\n        if (headers === void 0) { headers = {}; }\n        if (disconnectCallback) {\n            this.onDisconnect = disconnectCallback;\n        }\n        this.disconnectHeaders = headers;\n        _super.prototype.deactivate.call(this);\n    };\n    /**\n     * Available for backward compatibility, use [Client#publish]{@link Client#publish}.\n     *\n     * Send a message to a named destination. Refer to your STOMP broker documentation for types\n     * and naming of destinations. The headers will, typically, be available to the subscriber.\n     * However, there may be special purpose headers corresponding to your STOMP broker.\n     *\n     *  **Deprecated**, use [Client#publish]{@link Client#publish}\n     *\n     * Note: Body must be String. You will need to covert the payload to string in case it is not string (e.g. JSON)\n     *\n     * ```javascript\n     *        client.send(\"/queue/test\", {priority: 9}, \"Hello, STOMP\");\n     *\n     *        // If you want to send a message with a body, you must also pass the headers argument.\n     *        client.send(\"/queue/test\", {}, \"Hello, STOMP\");\n     * ```\n     *\n     * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n     */\n    CompatClient.prototype.send = function (destination, headers, body) {\n        if (headers === void 0) { headers = {}; }\n        if (body === void 0) { body = ''; }\n        headers = Object.assign({}, headers);\n        var skipContentLengthHeader = (headers['content-length'] === false);\n        if (skipContentLengthHeader) {\n            delete headers['content-length'];\n        }\n        this.publish({\n            destination: destination,\n            headers: headers,\n            body: body,\n            skipContentLengthHeader: skipContentLengthHeader\n        });\n    };\n    Object.defineProperty(CompatClient.prototype, \"reconnect_delay\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#reconnectDelay]{@link Client#reconnectDelay}.\n         *\n         * **Deprecated**\n         */\n        set: function (value) {\n            this.reconnectDelay = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompatClient.prototype, \"ws\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#webSocket]{@link Client#webSocket}.\n         *\n         * **Deprecated**\n         */\n        get: function () {\n            return this._webSocket;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompatClient.prototype, \"version\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#connectedVersion]{@link Client#connectedVersion}.\n         *\n         * **Deprecated**\n         */\n        get: function () {\n            return this.connectedVersion;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompatClient.prototype, \"onreceive\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n         *\n         * **Deprecated**\n         */\n        get: function () {\n            return this.onUnhandledMessage;\n        },\n        /**\n         * Available for backward compatibility, renamed to [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n         *\n         * **Deprecated**\n         */\n        set: function (value) {\n            this.onUnhandledMessage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompatClient.prototype, \"onreceipt\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n         * Prefer using [Client#watchForReceipt]{@link Client#watchForReceipt}.\n         *\n         * **Deprecated**\n         */\n        get: function () {\n            return this.onUnhandledReceipt;\n        },\n        /**\n         * Available for backward compatibility, renamed to [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n         *\n         * **Deprecated**\n         */\n        set: function (value) {\n            this.onUnhandledReceipt = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompatClient.prototype, \"heartbeat\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n         * [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n         *\n         * **Deprecated**\n         */\n        get: function () {\n            return this._heartbeatInfo;\n        },\n        /**\n         * Available for backward compatibility, renamed to [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n         * [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n         *\n         * **Deprecated**\n         */\n        set: function (value) {\n            this.heartbeatIncoming = value.incoming;\n            this.heartbeatOutgoing = value.outgoing;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CompatClient;\n}(client_1.Client));\nexports.CompatClient = CompatClient;\n\n\n/***/ }),\n\n/***/ \"./src/compatibility/heartbeat-info.ts\":\n/*!*********************************************!*\\\n  !*** ./src/compatibility/heartbeat-info.ts ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nvar HeartbeatInfo = /** @class */ (function () {\n    function HeartbeatInfo(client) {\n        this.client = client;\n    }\n    Object.defineProperty(HeartbeatInfo.prototype, \"outgoing\", {\n        get: function () {\n            return this.client.heartbeatOutgoing;\n        },\n        set: function (value) {\n            this.client.heartbeatOutgoing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HeartbeatInfo.prototype, \"incoming\", {\n        get: function () {\n            return this.client.heartbeatIncoming;\n        },\n        set: function (value) {\n            this.client.heartbeatIncoming = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return HeartbeatInfo;\n}());\nexports.HeartbeatInfo = HeartbeatInfo;\n\n\n/***/ }),\n\n/***/ \"./src/compatibility/stomp.ts\":\n/*!************************************!*\\\n  !*** ./src/compatibility/stomp.ts ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar versions_1 = __webpack_require__(/*! ../versions */ \"./src/versions.ts\");\nvar compat_client_1 = __webpack_require__(/*! ./compat-client */ \"./src/compatibility/compat-client.ts\");\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n *\n * Part of `@stomp/stompjs`.\n *\n * **Deprecated**\n *\n * It will be removed in next major version. Please switch to {@link Client}.\n */\nvar Stomp = /** @class */ (function () {\n    function Stomp() {\n    }\n    /**\n     * This method creates a WebSocket client that is connected to\n     * the STOMP server located at the url.\n     *\n     * ```javascript\n     *        var url = \"ws://localhost:61614/stomp\";\n     *        var client = Stomp.client(url);\n     * ```\n     *\n     * **Deprecated**\n     *\n     * It will be removed in next major version. Please switch to {@link Client}\n     * using [Client#brokerURL]{@link Client#brokerURL}.\n     */\n    Stomp.client = function (url, protocols) {\n        // This is a hack to allow another implementation than the standard\n        // HTML5 WebSocket class.\n        //\n        // It is possible to use another class by calling\n        //\n        //     Stomp.WebSocketClass = MozWebSocket\n        //\n        // *prior* to call `Stomp.client()`.\n        //\n        // This hack is deprecated and `Stomp.over()` method should be used\n        // instead.\n        // See remarks on the function Stomp.over\n        if (protocols == null) {\n            protocols = versions_1.Versions.default.protocolVersions();\n        }\n        var wsFn = function () {\n            var klass = Stomp.WebSocketClass || WebSocket;\n            return new klass(url, protocols);\n        };\n        return new compat_client_1.CompatClient(wsFn);\n    };\n    /**\n     * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n     * specify the WebSocket to use (either a standard HTML5 WebSocket or\n     * a similar object).\n     *\n     * In order to support reconnection, the function Client._connect should be callable more than once.\n     * While reconnecting\n     * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n     * alternatively allows passing a function that should return a new instance of the underlying socket.\n     *\n     * ```javascript\n     *        var client = Stomp.over(function(){\n     *          return new WebSocket('ws://localhost:15674/ws')\n     *        });\n     * ```\n     *\n     * **Deprecated**\n     *\n     * It will be removed in next major version. Please switch to {@link Client}\n     * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n     */\n    Stomp.over = function (ws) {\n        var wsFn;\n        if (typeof (ws) === 'function') {\n            wsFn = ws;\n        }\n        else {\n            console.warn('Stomp.over did not receive a factory, auto reconnect will not work. ' +\n                'Please see https://stomp-js.github.io/api-docs/latest/classes/Stomp.html#over');\n            wsFn = function () { return ws; };\n        }\n        return new compat_client_1.CompatClient(wsFn);\n    };\n    /**\n     * In case you need to use a non standard class for WebSocket.\n     *\n     * For example when using within NodeJS environment:\n     *\n     * ```javascript\n     *        StompJs = require('../../esm5/');\n     *        Stomp = StompJs.Stomp;\n     *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n     * ```\n     *\n     * **Deprecated**\n     *\n     *\n     * It will be removed in next major version. Please switch to {@link Client}\n     * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n     */\n    // tslint:disable-next-line:variable-name\n    Stomp.WebSocketClass = null;\n    return Stomp;\n}());\nexports.Stomp = Stomp;\n\n\n/***/ }),\n\n/***/ \"./src/frame-impl.ts\":\n/*!***************************!*\\\n  !*** ./src/frame-impl.ts ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar byte_1 = __webpack_require__(/*! ./byte */ \"./src/byte.ts\");\n/**\n * Frame class represents a STOMP frame.\n *\n * @internal\n */\nvar FrameImpl = /** @class */ (function () {\n    /**\n     * Frame constructor. `command`, `headers` and `body` are available as properties.\n     *\n     * @internal\n     */\n    function FrameImpl(params) {\n        var command = params.command, headers = params.headers, body = params.body, binaryBody = params.binaryBody, escapeHeaderValues = params.escapeHeaderValues, skipContentLengthHeader = params.skipContentLengthHeader;\n        this.command = command;\n        this.headers = Object.assign({}, headers || {});\n        if (binaryBody) {\n            this._binaryBody = binaryBody;\n            this.isBinaryBody = true;\n        }\n        else {\n            this._body = body || '';\n            this.isBinaryBody = false;\n        }\n        this.escapeHeaderValues = escapeHeaderValues || false;\n        this.skipContentLengthHeader = skipContentLengthHeader || false;\n    }\n    Object.defineProperty(FrameImpl.prototype, \"body\", {\n        /**\n         * body of the frame\n         */\n        get: function () {\n            if (!this._body && this.isBinaryBody) {\n                this._body = new TextDecoder().decode(this._binaryBody);\n            }\n            return this._body;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FrameImpl.prototype, \"binaryBody\", {\n        /**\n         * body as Uint8Array\n         */\n        get: function () {\n            if (!this._binaryBody && !this.isBinaryBody) {\n                this._binaryBody = new TextEncoder().encode(this._body);\n            }\n            return this._binaryBody;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * deserialize a STOMP Frame from raw data.\n     *\n     * @internal\n     */\n    FrameImpl.fromRawFrame = function (rawFrame, escapeHeaderValues) {\n        var headers = {};\n        var trim = function (str) { return str.replace(/^\\s+|\\s+$/g, ''); };\n        // In case of repeated headers, as per standards, first value need to be used\n        for (var _i = 0, _a = rawFrame.headers.reverse(); _i < _a.length; _i++) {\n            var header = _a[_i];\n            var idx = header.indexOf(':');\n            var key = trim(header[0]);\n            var value = trim(header[1]);\n            if (escapeHeaderValues && (rawFrame.command !== 'CONNECT') && (rawFrame.command !== 'CONNECTED')) {\n                value = FrameImpl.hdrValueUnEscape(value);\n            }\n            headers[key] = value;\n        }\n        return new FrameImpl({\n            command: rawFrame.command,\n            headers: headers,\n            binaryBody: rawFrame.binaryBody,\n            escapeHeaderValues: escapeHeaderValues\n        });\n    };\n    /**\n     * @internal\n     */\n    FrameImpl.prototype.toString = function () {\n        return this.serializeCmdAndHeaders();\n    };\n    /**\n     * serialize this Frame in a format suitable to be passed to WebSocket.\n     * If the body is string the output will be string.\n     * If the body is binary (i.e. of type Unit8Array) it will be serialized to ArrayBuffer.\n     *\n     * @internal\n     */\n    FrameImpl.prototype.serialize = function () {\n        var cmdAndHeaders = this.serializeCmdAndHeaders();\n        if (this.isBinaryBody) {\n            return FrameImpl.toUnit8Array(cmdAndHeaders, this._binaryBody).buffer;\n        }\n        else {\n            return cmdAndHeaders + this._body + byte_1.BYTE.NULL;\n        }\n    };\n    FrameImpl.prototype.serializeCmdAndHeaders = function () {\n        var lines = [this.command];\n        if (this.skipContentLengthHeader) {\n            delete this.headers['content-length'];\n        }\n        for (var _i = 0, _a = Object.keys(this.headers || {}); _i < _a.length; _i++) {\n            var name_1 = _a[_i];\n            var value = this.headers[name_1];\n            if (this.escapeHeaderValues && (this.command !== 'CONNECT') && (this.command !== 'CONNECTED')) {\n                lines.push(name_1 + \":\" + FrameImpl.hdrValueEscape(\"\" + value));\n            }\n            else {\n                lines.push(name_1 + \":\" + value);\n            }\n        }\n        if (this.isBinaryBody || (!this.isBodyEmpty() && !this.skipContentLengthHeader)) {\n            lines.push(\"content-length:\" + this.bodyLength());\n        }\n        return lines.join(byte_1.BYTE.LF) + byte_1.BYTE.LF + byte_1.BYTE.LF;\n    };\n    FrameImpl.prototype.isBodyEmpty = function () {\n        return this.bodyLength() === 0;\n    };\n    FrameImpl.prototype.bodyLength = function () {\n        var binaryBody = this.binaryBody;\n        return binaryBody ? binaryBody.length : 0;\n    };\n    /**\n     * Compute the size of a UTF-8 string by counting its number of bytes\n     * (and not the number of characters composing the string)\n     */\n    FrameImpl.sizeOfUTF8 = function (s) {\n        return s ? new TextEncoder().encode(s).length : 0;\n    };\n    FrameImpl.toUnit8Array = function (cmdAndHeaders, binaryBody) {\n        var uint8CmdAndHeaders = new TextEncoder().encode(cmdAndHeaders);\n        var nullTerminator = new Uint8Array([0]);\n        var uint8Frame = new Uint8Array(uint8CmdAndHeaders.length + binaryBody.length + nullTerminator.length);\n        uint8Frame.set(uint8CmdAndHeaders);\n        uint8Frame.set(binaryBody, uint8CmdAndHeaders.length);\n        uint8Frame.set(nullTerminator, uint8CmdAndHeaders.length + binaryBody.length);\n        return uint8Frame;\n    };\n    /**\n     * Serialize a STOMP frame as per STOMP standards, suitable to be sent to the STOMP broker.\n     *\n     * @internal\n     */\n    FrameImpl.marshall = function (params) {\n        var frame = new FrameImpl(params);\n        return frame.serialize();\n    };\n    /**\n     *  Escape header values\n     */\n    FrameImpl.hdrValueEscape = function (str) {\n        return str.replace(/\\\\/g, '\\\\\\\\').replace(/\\r/g, '\\\\r').replace(/\\n/g, '\\\\n').replace(/:/g, '\\\\c');\n    };\n    /**\n     * UnEscape header values\n     */\n    FrameImpl.hdrValueUnEscape = function (str) {\n        return str.replace(/\\\\r/g, '\\r').replace(/\\\\n/g, '\\n').replace(/\\\\c/g, ':').replace(/\\\\\\\\/g, '\\\\');\n    };\n    return FrameImpl;\n}());\nexports.FrameImpl = FrameImpl;\n\n\n/***/ }),\n\n/***/ \"./src/index.ts\":\n/*!**********************!*\\\n  !*** ./src/index.ts ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(/*! ./client */ \"./src/client.ts\"));\n__export(__webpack_require__(/*! ./frame-impl */ \"./src/frame-impl.ts\"));\n__export(__webpack_require__(/*! ./parser */ \"./src/parser.ts\"));\n__export(__webpack_require__(/*! ./stomp-config */ \"./src/stomp-config.ts\"));\n__export(__webpack_require__(/*! ./stomp-headers */ \"./src/stomp-headers.ts\"));\n__export(__webpack_require__(/*! ./stomp-subscription */ \"./src/stomp-subscription.ts\"));\n__export(__webpack_require__(/*! ./versions */ \"./src/versions.ts\"));\n__export(__webpack_require__(/*! ./web-socket-state */ \"./src/web-socket-state.ts\"));\n// Compatibility code\n__export(__webpack_require__(/*! ./compatibility/compat-client */ \"./src/compatibility/compat-client.ts\"));\n__export(__webpack_require__(/*! ./compatibility/stomp */ \"./src/compatibility/stomp.ts\"));\n\n\n/***/ }),\n\n/***/ \"./src/parser.ts\":\n/*!***********************!*\\\n  !*** ./src/parser.ts ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internal\n */\nvar NULL = 0;\n/**\n * @internal\n */\nvar LF = 10;\n/**\n * @internal\n */\nvar CR = 13;\n/**\n * @internal\n */\nvar COLON = 58;\n/**\n * This is an evented, rec descent parser.\n * A stream of Octets can be passed and whenever it recognizes\n * a complete Frame or an incoming ping it will invoke the registered callbacks.\n *\n * All incoming Octets are fed into _onByte function.\n * Depending on current state the _onByte function keeps changing.\n * Depending on the state it keeps accumulating into _token and _results.\n * State is indicated by current value of _onByte, all states are named as _collect.\n *\n * STOMP standards https://stomp.github.io/stomp-specification-1.2.html\n * imply that all lengths are considered in bytes (instead of string lengths).\n * So, before actual parsing, if the incoming data is String it is converted to Octets.\n * This allows faithful implementation of the protocol and allows NULL Octets to be present in the body.\n *\n * There is no peek function on the incoming data.\n * When a state change occurs based on an Octet without consuming the Octet,\n * the Octet, after state change, is fed again (_reinjectByte).\n * This became possible as the state change can be determined by inspecting just one Octet.\n *\n * There are two modes to collect the body, if content-length header is there then it by counting Octets\n * otherwise it is determined by NULL terminator.\n *\n * Following the standards, the command and headers are converted to Strings\n * and the body is returned as Octets.\n * Headers are returned as an array and not as Hash - to allow multiple occurrence of an header.\n *\n * This parser does not use Regular Expressions as that can only operate on Strings.\n *\n * It handles if multiple STOMP frames are given as one chunk, a frame is split into multiple chunks, or\n * any combination there of. The parser remembers its state (any partial frame) and continues when a new chunk\n * is pushed.\n *\n * Typically the higher level function will convert headers to Hash, handle unescaping of header values\n * (which is protocol version specific), and convert body to text.\n *\n * Check the parser.spec.js to understand cases that this parser is supposed to handle.\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nvar Parser = /** @class */ (function () {\n    function Parser(onFrame, onIncomingPing) {\n        this.onFrame = onFrame;\n        this.onIncomingPing = onIncomingPing;\n        this._encoder = new TextEncoder();\n        this._decoder = new TextDecoder();\n        this._token = [];\n        this._initState();\n    }\n    Parser.prototype.parseChunk = function (segment, appendMissingNULLonIncoming) {\n        if (appendMissingNULLonIncoming === void 0) { appendMissingNULLonIncoming = false; }\n        var chunk;\n        if ((segment instanceof ArrayBuffer)) {\n            chunk = new Uint8Array(segment);\n        }\n        else {\n            chunk = this._encoder.encode(segment);\n        }\n        // See https://github.com/stomp-js/stompjs/issues/89\n        // Remove when underlying issue is fixed.\n        //\n        // Send a NULL byte, if the last byte of a Text frame was not NULL.F\n        if (appendMissingNULLonIncoming && chunk[chunk.length - 1] !== 0) {\n            var chunkWithNull = new Uint8Array(chunk.length + 1);\n            chunkWithNull.set(chunk, 0);\n            chunkWithNull[chunk.length] = 0;\n            chunk = chunkWithNull;\n        }\n        // tslint:disable-next-line:prefer-for-of\n        for (var i = 0; i < chunk.length; i++) {\n            var byte = chunk[i];\n            this._onByte(byte);\n        }\n    };\n    // The following implements a simple Rec Descent Parser.\n    // The grammar is simple and just one byte tells what should be the next state\n    Parser.prototype._collectFrame = function (byte) {\n        if (byte === NULL) { // Ignore\n            return;\n        }\n        if (byte === CR) { // Ignore CR\n            return;\n        }\n        if (byte === LF) { // Incoming Ping\n            this.onIncomingPing();\n            return;\n        }\n        this._onByte = this._collectCommand;\n        this._reinjectByte(byte);\n    };\n    Parser.prototype._collectCommand = function (byte) {\n        if (byte === CR) { // Ignore CR\n            return;\n        }\n        if (byte === LF) {\n            this._results.command = this._consumeTokenAsUTF8();\n            this._onByte = this._collectHeaders;\n            return;\n        }\n        this._consumeByte(byte);\n    };\n    Parser.prototype._collectHeaders = function (byte) {\n        if (byte === CR) { // Ignore CR\n            return;\n        }\n        if (byte === LF) {\n            this._setupCollectBody();\n            return;\n        }\n        this._onByte = this._collectHeaderKey;\n        this._reinjectByte(byte);\n    };\n    Parser.prototype._reinjectByte = function (byte) {\n        this._onByte(byte);\n    };\n    Parser.prototype._collectHeaderKey = function (byte) {\n        if (byte === COLON) {\n            this._headerKey = this._consumeTokenAsUTF8();\n            this._onByte = this._collectHeaderValue;\n            return;\n        }\n        this._consumeByte(byte);\n    };\n    Parser.prototype._collectHeaderValue = function (byte) {\n        if (byte === CR) { // Ignore CR\n            return;\n        }\n        if (byte === LF) {\n            this._results.headers.push([this._headerKey, this._consumeTokenAsUTF8()]);\n            this._headerKey = undefined;\n            this._onByte = this._collectHeaders;\n            return;\n        }\n        this._consumeByte(byte);\n    };\n    Parser.prototype._setupCollectBody = function () {\n        var contentLengthHeader = this._results.headers.filter(function (header) {\n            return header[0] === 'content-length';\n        })[0];\n        if (contentLengthHeader) {\n            this._bodyBytesRemaining = parseInt(contentLengthHeader[1], 10);\n            this._onByte = this._collectBodyFixedSize;\n        }\n        else {\n            this._onByte = this._collectBodyNullTerminated;\n        }\n    };\n    Parser.prototype._collectBodyNullTerminated = function (byte) {\n        if (byte === NULL) {\n            this._retrievedBody();\n            return;\n        }\n        this._consumeByte(byte);\n    };\n    Parser.prototype._collectBodyFixedSize = function (byte) {\n        // It is post decrement, so that we discard the trailing NULL octet\n        if (this._bodyBytesRemaining-- === 0) {\n            this._retrievedBody();\n            return;\n        }\n        this._consumeByte(byte);\n    };\n    Parser.prototype._retrievedBody = function () {\n        this._results.binaryBody = this._consumeTokenAsRaw();\n        this.onFrame(this._results);\n        this._initState();\n    };\n    // Rec Descent Parser helpers\n    Parser.prototype._consumeByte = function (byte) {\n        this._token.push(byte);\n    };\n    Parser.prototype._consumeTokenAsUTF8 = function () {\n        return this._decoder.decode(this._consumeTokenAsRaw());\n    };\n    Parser.prototype._consumeTokenAsRaw = function () {\n        var rawResult = new Uint8Array(this._token);\n        this._token = [];\n        return rawResult;\n    };\n    Parser.prototype._initState = function () {\n        this._results = {\n            command: undefined,\n            headers: [],\n            binaryBody: undefined\n        };\n        this._token = [];\n        this._headerKey = undefined;\n        this._onByte = this._collectFrame;\n    };\n    return Parser;\n}());\nexports.Parser = Parser;\n\n\n/***/ }),\n\n/***/ \"./src/stomp-config.ts\":\n/*!*****************************!*\\\n  !*** ./src/stomp-config.ts ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Configuration options for STOMP Client, each key corresponds to\n * field by the same name in {@link Client}. This can be passed to\n * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n *\n * Part of `@stomp/stompjs`.\n */\nvar StompConfig = /** @class */ (function () {\n    function StompConfig() {\n    }\n    return StompConfig;\n}());\nexports.StompConfig = StompConfig;\n\n\n/***/ }),\n\n/***/ \"./src/stomp-handler.ts\":\n/*!******************************!*\\\n  !*** ./src/stomp-handler.ts ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar byte_1 = __webpack_require__(/*! ./byte */ \"./src/byte.ts\");\nvar frame_impl_1 = __webpack_require__(/*! ./frame-impl */ \"./src/frame-impl.ts\");\nvar parser_1 = __webpack_require__(/*! ./parser */ \"./src/parser.ts\");\nvar versions_1 = __webpack_require__(/*! ./versions */ \"./src/versions.ts\");\nvar web_socket_state_1 = __webpack_require__(/*! ./web-socket-state */ \"./src/web-socket-state.ts\");\n/**\n * The STOMP protocol handler\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nvar StompHandler = /** @class */ (function () {\n    function StompHandler(_client, _webSocket, config) {\n        var _this = this;\n        if (config === void 0) { config = {}; }\n        this._client = _client;\n        this._webSocket = _webSocket;\n        this._serverFrameHandlers = {\n            // [CONNECTED Frame](http://stomp.github.com/stomp-specification-1.2.html#CONNECTED_Frame)\n            CONNECTED: function (frame) {\n                _this.debug(\"connected to server \" + frame.headers.server);\n                _this._connected = true;\n                _this._connectedVersion = frame.headers.version;\n                // STOMP version 1.2 needs header values to be escaped\n                if (_this._connectedVersion === versions_1.Versions.V1_2) {\n                    _this._escapeHeaderValues = true;\n                }\n                _this._setupHeartbeat(frame.headers);\n                _this.onConnect(frame);\n            },\n            // [MESSAGE Frame](http://stomp.github.com/stomp-specification-1.2.html#MESSAGE)\n            MESSAGE: function (frame) {\n                // the callback is registered when the client calls\n                // `subscribe()`.\n                // If there is no registered subscription for the received message,\n                // the default `onUnhandledMessage` callback is used that the client can set.\n                // This is useful for subscriptions that are automatically created\n                // on the browser side (e.g. [RabbitMQ's temporary\n                // queues](http://www.rabbitmq.com/stomp.html)).\n                var subscription = frame.headers.subscription;\n                var onReceive = _this._subscriptions[subscription] || _this.onUnhandledMessage;\n                // bless the frame to be a Message\n                var message = frame;\n                var client = _this;\n                var messageId = _this._connectedVersion === versions_1.Versions.V1_2 ? message.headers.ack : message.headers['message-id'];\n                // add `ack()` and `nack()` methods directly to the returned frame\n                // so that a simple call to `message.ack()` can acknowledge the message.\n                message.ack = function (headers) {\n                    if (headers === void 0) { headers = {}; }\n                    return client.ack(messageId, subscription, headers);\n                };\n                message.nack = function (headers) {\n                    if (headers === void 0) { headers = {}; }\n                    return client.nack(messageId, subscription, headers);\n                };\n                onReceive(message);\n            },\n            // [RECEIPT Frame](http://stomp.github.com/stomp-specification-1.2.html#RECEIPT)\n            RECEIPT: function (frame) {\n                var callback = _this._receiptWatchers[frame.headers['receipt-id']];\n                if (callback) {\n                    callback(frame);\n                    // Server will acknowledge only once, remove the callback\n                    delete _this._receiptWatchers[frame.headers['receipt-id']];\n                }\n                else {\n                    _this.onUnhandledReceipt(frame);\n                }\n            },\n            // [ERROR Frame](http://stomp.github.com/stomp-specification-1.2.html#ERROR)\n            ERROR: function (frame) {\n                _this.onStompError(frame);\n            }\n        };\n        // used to index subscribers\n        this._counter = 0;\n        // subscription callbacks indexed by subscriber's ID\n        this._subscriptions = {};\n        // receipt-watchers indexed by receipts-ids\n        this._receiptWatchers = {};\n        this._partialData = '';\n        this._escapeHeaderValues = false;\n        this._lastServerActivityTS = Date.now();\n        this.configure(config);\n    }\n    Object.defineProperty(StompHandler.prototype, \"connectedVersion\", {\n        get: function () {\n            return this._connectedVersion;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StompHandler.prototype, \"connected\", {\n        get: function () {\n            return this._connected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StompHandler.prototype.configure = function (conf) {\n        // bulk assign all properties to this\n        Object.assign(this, conf);\n    };\n    StompHandler.prototype.start = function () {\n        var _this = this;\n        var parser = new parser_1.Parser(\n        // On Frame\n        function (rawFrame) {\n            var frame = frame_impl_1.FrameImpl.fromRawFrame(rawFrame, _this._escapeHeaderValues);\n            // if this.logRawCommunication is set, the rawChunk is logged at this._webSocket.onmessage\n            if (!_this.logRawCommunication) {\n                _this.debug(\"<<< \" + frame);\n            }\n            var serverFrameHandler = _this._serverFrameHandlers[frame.command] || _this.onUnhandledFrame;\n            serverFrameHandler(frame);\n        }, \n        // On Incoming Ping\n        function () {\n            _this.debug('<<< PONG');\n        });\n        this._webSocket.onmessage = function (evt) {\n            _this.debug('Received data');\n            _this._lastServerActivityTS = Date.now();\n            if (_this.logRawCommunication) {\n                var rawChunkAsString = (evt.data instanceof ArrayBuffer) ? new TextDecoder().decode(evt.data) : evt.data;\n                _this.debug(\"<<< \" + rawChunkAsString);\n            }\n            parser.parseChunk(evt.data, _this.appendMissingNULLonIncoming);\n        };\n        this._webSocket.onclose = function (closeEvent) {\n            _this.debug(\"Connection closed to \" + _this._webSocket.url);\n            _this.onWebSocketClose(closeEvent);\n            _this._cleanUp();\n        };\n        this._webSocket.onerror = function (errorEvent) {\n            _this.onWebSocketError(errorEvent);\n        };\n        this._webSocket.onopen = function () {\n            // Clone before updating\n            var connectHeaders = Object.assign({}, _this.connectHeaders);\n            _this.debug('Web Socket Opened...');\n            connectHeaders['accept-version'] = _this.stompVersions.supportedVersions();\n            connectHeaders['heart-beat'] = [_this.heartbeatOutgoing, _this.heartbeatIncoming].join(',');\n            _this._transmit({ command: 'CONNECT', headers: connectHeaders });\n        };\n    };\n    StompHandler.prototype._setupHeartbeat = function (headers) {\n        var _this = this;\n        if ((headers.version !== versions_1.Versions.V1_1 && headers.version !== versions_1.Versions.V1_2)) {\n            return;\n        }\n        // It is valid for the server to not send this header\n        // https://stomp.github.io/stomp-specification-1.2.html#Heart-beating\n        if (!headers['heart-beat']) {\n            return;\n        }\n        // heart-beat header received from the server looks like:\n        //\n        //     heart-beat: sx, sy\n        var _a = (headers['heart-beat']).split(',').map(function (v) { return parseInt(v, 10); }), serverOutgoing = _a[0], serverIncoming = _a[1];\n        if ((this.heartbeatOutgoing !== 0) && (serverIncoming !== 0)) {\n            var ttl = Math.max(this.heartbeatOutgoing, serverIncoming);\n            this.debug(\"send PING every \" + ttl + \"ms\");\n            this._pinger = setInterval(function () {\n                if (_this._webSocket.readyState === web_socket_state_1.WebSocketState.OPEN) {\n                    _this._webSocket.send(byte_1.BYTE.LF);\n                    _this.debug('>>> PING');\n                }\n            }, ttl);\n        }\n        if ((this.heartbeatIncoming !== 0) && (serverOutgoing !== 0)) {\n            var ttl_1 = Math.max(this.heartbeatIncoming, serverOutgoing);\n            this.debug(\"check PONG every \" + ttl_1 + \"ms\");\n            this._ponger = setInterval(function () {\n                var delta = Date.now() - _this._lastServerActivityTS;\n                // We wait twice the TTL to be flexible on window's setInterval calls\n                if (delta > (ttl_1 * 2)) {\n                    _this.debug(\"did not receive server activity for the last \" + delta + \"ms\");\n                    _this._closeWebsocket();\n                }\n            }, ttl_1);\n        }\n    };\n    StompHandler.prototype._closeWebsocket = function () {\n        this._webSocket.onmessage = function () { }; // ignore messages\n        this._webSocket.close();\n    };\n    StompHandler.prototype._transmit = function (params) {\n        var command = params.command, headers = params.headers, body = params.body, binaryBody = params.binaryBody, skipContentLengthHeader = params.skipContentLengthHeader;\n        var frame = new frame_impl_1.FrameImpl({\n            command: command,\n            headers: headers,\n            body: body,\n            binaryBody: binaryBody,\n            escapeHeaderValues: this._escapeHeaderValues,\n            skipContentLengthHeader: skipContentLengthHeader\n        });\n        var rawChunk = frame.serialize();\n        if (this.logRawCommunication) {\n            this.debug(\">>> \" + rawChunk);\n        }\n        else {\n            this.debug(\">>> \" + frame);\n        }\n        if (this.forceBinaryWSFrames && typeof rawChunk === 'string') {\n            rawChunk = new TextEncoder().encode(rawChunk);\n        }\n        if (typeof rawChunk !== 'string' || !this.splitLargeFrames) {\n            this._webSocket.send(rawChunk);\n        }\n        else {\n            var out = rawChunk;\n            while (out.length > 0) {\n                var chunk = out.substring(0, this.maxWebSocketChunkSize);\n                out = out.substring(this.maxWebSocketChunkSize);\n                this._webSocket.send(chunk);\n                this.debug(\"chunk sent = \" + chunk.length + \", remaining = \" + out.length);\n            }\n        }\n    };\n    StompHandler.prototype.dispose = function () {\n        var _this = this;\n        if (this.connected) {\n            try {\n                // clone before updating\n                var disconnectHeaders = Object.assign({}, this.disconnectHeaders);\n                if (!disconnectHeaders.receipt) {\n                    disconnectHeaders.receipt = \"close-\" + this._counter++;\n                }\n                this.watchForReceipt(disconnectHeaders.receipt, function (frame) {\n                    _this._closeWebsocket();\n                    _this._cleanUp();\n                    _this.onDisconnect(frame);\n                });\n                this._transmit({ command: 'DISCONNECT', headers: disconnectHeaders });\n            }\n            catch (error) {\n                this.debug(\"Ignoring error during disconnect \" + error);\n            }\n        }\n        else {\n            if (this._webSocket.readyState === web_socket_state_1.WebSocketState.CONNECTING\n                || this._webSocket.readyState === web_socket_state_1.WebSocketState.OPEN) {\n                this._closeWebsocket();\n            }\n        }\n    };\n    StompHandler.prototype._cleanUp = function () {\n        this._connected = false;\n        if (this._pinger) {\n            clearInterval(this._pinger);\n        }\n        if (this._ponger) {\n            clearInterval(this._ponger);\n        }\n    };\n    StompHandler.prototype.publish = function (params) {\n        var destination = params.destination, headers = params.headers, body = params.body, binaryBody = params.binaryBody, skipContentLengthHeader = params.skipContentLengthHeader;\n        var hdrs = Object.assign({ destination: destination }, headers);\n        this._transmit({\n            command: 'SEND',\n            headers: hdrs,\n            body: body,\n            binaryBody: binaryBody,\n            skipContentLengthHeader: skipContentLengthHeader\n        });\n    };\n    StompHandler.prototype.watchForReceipt = function (receiptId, callback) {\n        this._receiptWatchers[receiptId] = callback;\n    };\n    StompHandler.prototype.subscribe = function (destination, callback, headers) {\n        if (headers === void 0) { headers = {}; }\n        headers = Object.assign({}, headers);\n        if (!headers.id) {\n            headers.id = \"sub-\" + this._counter++;\n        }\n        headers.destination = destination;\n        this._subscriptions[headers.id] = callback;\n        this._transmit({ command: 'SUBSCRIBE', headers: headers });\n        var client = this;\n        return {\n            id: headers.id,\n            unsubscribe: function (hdrs) {\n                return client.unsubscribe(headers.id, hdrs);\n            }\n        };\n    };\n    StompHandler.prototype.unsubscribe = function (id, headers) {\n        if (headers === void 0) { headers = {}; }\n        headers = Object.assign({}, headers);\n        delete this._subscriptions[id];\n        headers.id = id;\n        this._transmit({ command: 'UNSUBSCRIBE', headers: headers });\n    };\n    StompHandler.prototype.begin = function (transactionId) {\n        var txId = transactionId || (\"tx-\" + this._counter++);\n        this._transmit({\n            command: 'BEGIN', headers: {\n                transaction: txId\n            }\n        });\n        var client = this;\n        return {\n            id: txId,\n            commit: function () {\n                client.commit(txId);\n            },\n            abort: function () {\n                client.abort(txId);\n            }\n        };\n    };\n    StompHandler.prototype.commit = function (transactionId) {\n        this._transmit({\n            command: 'COMMIT', headers: {\n                transaction: transactionId\n            }\n        });\n    };\n    StompHandler.prototype.abort = function (transactionId) {\n        this._transmit({\n            command: 'ABORT', headers: {\n                transaction: transactionId\n            }\n        });\n    };\n    StompHandler.prototype.ack = function (messageId, subscriptionId, headers) {\n        if (headers === void 0) { headers = {}; }\n        headers = Object.assign({}, headers);\n        if (this._connectedVersion === versions_1.Versions.V1_2) {\n            headers.id = messageId;\n        }\n        else {\n            headers['message-id'] = messageId;\n        }\n        headers.subscription = subscriptionId;\n        this._transmit({ command: 'ACK', headers: headers });\n    };\n    StompHandler.prototype.nack = function (messageId, subscriptionId, headers) {\n        if (headers === void 0) { headers = {}; }\n        headers = Object.assign({}, headers);\n        if (this._connectedVersion === versions_1.Versions.V1_2) {\n            headers.id = messageId;\n        }\n        else {\n            headers['message-id'] = messageId;\n        }\n        headers.subscription = subscriptionId;\n        return this._transmit({ command: 'NACK', headers: headers });\n    };\n    return StompHandler;\n}());\nexports.StompHandler = StompHandler;\n\n\n/***/ }),\n\n/***/ \"./src/stomp-headers.ts\":\n/*!******************************!*\\\n  !*** ./src/stomp-headers.ts ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * STOMP headers. Many functions calls will accept headers as parameters.\n * The headers sent by Broker will be available as [IFrame#headers]{@link IFrame#headers}.\n *\n * `key` and `value` must be valid strings.\n * In addition, `key` must not contain `CR`, `LF`, or `:`.\n *\n * Part of `@stomp/stompjs`.\n */\nvar StompHeaders = /** @class */ (function () {\n    function StompHeaders() {\n    }\n    return StompHeaders;\n}());\nexports.StompHeaders = StompHeaders;\n\n\n/***/ }),\n\n/***/ \"./src/stomp-subscription.ts\":\n/*!***********************************!*\\\n  !*** ./src/stomp-subscription.ts ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n *\n * Part of `@stomp/stompjs`.\n */\nvar StompSubscription = /** @class */ (function () {\n    function StompSubscription() {\n    }\n    return StompSubscription;\n}());\nexports.StompSubscription = StompSubscription;\n\n\n/***/ }),\n\n/***/ \"./src/versions.ts\":\n/*!*************************!*\\\n  !*** ./src/versions.ts ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Supported STOMP versions\n *\n * Part of `@stomp/stompjs`.\n */\nvar Versions = /** @class */ (function () {\n    /**\n     * Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\n     *\n     * You will an instance if this class if you want to override supported versions to be declared during\n     * STOMP handshake.\n     */\n    function Versions(versions) {\n        this.versions = versions;\n    }\n    /**\n     * Used as part of CONNECT STOMP Frame\n     */\n    Versions.prototype.supportedVersions = function () {\n        return this.versions.join(',');\n    };\n    /**\n     * Used while creating a WebSocket\n     */\n    Versions.prototype.protocolVersions = function () {\n        return this.versions.map(function (x) { return \"v\" + x.replace('.', '') + \".stomp\"; });\n    };\n    /**\n     * Indicates protocol version 1.0\n     */\n    Versions.V1_0 = '1.0';\n    /**\n     * Indicates protocol version 1.1\n     */\n    Versions.V1_1 = '1.1';\n    /**\n     * Indicates protocol version 1.2\n     */\n    Versions.V1_2 = '1.2';\n    /**\n     * @internal\n     */\n    Versions.default = new Versions([Versions.V1_0, Versions.V1_1, Versions.V1_2]);\n    return Versions;\n}());\nexports.Versions = Versions;\n\n\n/***/ }),\n\n/***/ \"./src/web-socket-state.ts\":\n/*!*********************************!*\\\n  !*** ./src/web-socket-state.ts ***!\n  \\*********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Possible states for the WebSocket, copied here to avoid dependency on WebSocket class\n *\n * Part of `@stomp/rx-stomp`\n *\n * @internal\n */\nvar WebSocketState;\n(function (WebSocketState) {\n    WebSocketState[WebSocketState[\"CONNECTING\"] = 0] = \"CONNECTING\";\n    WebSocketState[WebSocketState[\"OPEN\"] = 1] = \"OPEN\";\n    WebSocketState[WebSocketState[\"CLOSING\"] = 2] = \"CLOSING\";\n    WebSocketState[WebSocketState[\"CLOSED\"] = 3] = \"CLOSED\";\n})(WebSocketState = exports.WebSocketState || (exports.WebSocketState = {}));\n\n\n/***/ }),\n\n/***/ 0:\n/*!****************************!*\\\n  !*** multi ./src/index.ts ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(/*! /home/kdeepak/MyWork/Tech/stomp/stompjs/src/index.ts */\"./src/index.ts\");\n\n\n/***/ })\n\n/******/ });\n});\n//# sourceMappingURL=stomp.umd.js.map","import { environment } from './../../environments/environment';\r\n// const api = 'http://localhost:8080/';\r\n// const api = '/';\r\n// const api = 'https://iopen-1.herokuapp.com/';\r\nconst subscribe = '/subscribe/';\r\nconst send = '/app-socket/';\r\n\r\nexport class SocketEndpoints {\r\n    \r\n    \r\n\r\n    public static SOCKET = environment.production ? 'ws://' + window.location.host + '/socket' : 'ws://localhost:8080/socket';\r\n\r\n\r\n    public static SUBS_INTERACAO_POR_SOLICITACAO_ID = subscribe + 'interacao/';\r\n    public static SEND_INTERACAO = send + 'interacao/';\r\n\r\n    public static SUBS_SOLICITACAO = subscribe + 'solicitacao/';\r\n    public static SEND_SOLICITACAO = send + 'solicitacao/';\r\n}\r\n","import { InteracaoNew } from './../../../_shared/model/interacao-new.model';\r\nimport { Endpoints } from './../../../_config/endpoints';\r\nimport { Interacao } from './../../../_shared/model/interacao.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InteracaoService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  find(id: number) {\r\n    return this.http.get<Interacao[]>(Endpoints.INTERACAO + id);\r\n  }\r\n\r\n  insert(interacaoNew: InteracaoNew) {\r\n    return this.http.post<InteracaoNew>(Endpoints.INTERACAO, interacaoNew);\r\n  }\r\n}\r\n","export class StatusDaSolicitacao {\r\n\r\n    public static AGUARDANDO_ANALISE: Opcao = {\r\n        id: -2,\r\n        valor: 'Aguardando análise'\r\n    };\r\n\r\n    public static AGUARDANDO_INTERACAO_DO_CLIENTE: Opcao = {\r\n        id: -1,\r\n        valor: 'Aguardando Interação do Cliente'\r\n    };\r\n\r\n    public static AGUARDANDO_INTERACAO_INICIAL_DO_CLIENTE: Opcao = {\r\n        id: 0,\r\n        valor: 'Aguardando Interação Inicial do Cliente'\r\n    };\r\n\r\n    public static AGUARDANDO_ANALISE_INICIAL: Opcao = {\r\n        id: 1,\r\n        valor: 'Aguardando análise inicial'\r\n    };\r\n\r\n    public static EM_ATENDIMENTO: Opcao = {\r\n        id: 2,\r\n        valor: 'Em atendimento'\r\n    };\r\n\r\n    public static AGUARDANDO_APROVACAO: Opcao = {\r\n        id: 3,\r\n        valor: 'Aguardando aprovação'\r\n    };\r\n\r\n    public static ENCERRADA: Opcao = {\r\n        id: 4,\r\n        valor: 'Encerrada'\r\n    };\r\n\r\n    public static PAUSADA: Opcao = {\r\n        id: 5,\r\n        valor: 'Pausada'\r\n    };\r\n\r\n    public static CANCELADA: Opcao = {\r\n        id: 6,\r\n        valor: 'Cancelada'\r\n    };\r\n}\r\n\r\ninterface Opcao {\r\n    id: number;\r\n    valor: string;\r\n}","export class TipoServicoInfo {\r\n\r\n    public SELECT: Opcao = {\r\n        id: 1,\r\n        valor: 'select'\r\n    };\r\n\r\n    public DATE: Opcao = {\r\n        id: 2,\r\n        valor: 'date'\r\n    };\r\n\r\n    public TEXTAREA: Opcao = {\r\n        id: 3,\r\n        valor: 'textarea'\r\n    };\r\n}\r\n\r\ninterface Opcao {\r\n    id: number;\r\n    valor: string;\r\n}\r\n","export class FileToUpload {\r\n    fileName: string = \"\";\r\n    fileSize: number = 0;\r\n    fileType: string = \"\";\r\n    lastModifiedTime: number = 0;\r\n    lastModifiedDate: Date = null;\r\n    fileAsBase64: string = \"\";\r\n}","import { Injectable } from '@angular/core';\r\nimport { StompService, StompConfig, StompState } from '@stomp/ng2-stompjs';\r\nimport { Message } from '@stomp/stompjs';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\n// @Injectable({\r\n//   providedIn: 'root'\r\n// })\r\nexport class SocketService {\r\n  private messages: Observable<Message>;\r\n  private stompService: StompService;\r\n\r\n  constructor(socketUrl: string, streamUrl: string) {\r\n    // Create Stomp Configuration\r\n    const stompConfig: StompConfig = {\r\n      url: socketUrl,\r\n      headers: {\r\n        login: '',\r\n        passcode: ''\r\n      },\r\n      heartbeat_in: 0,\r\n      heartbeat_out: 20000,\r\n      reconnect_delay: 5000,\r\n      debug: true,\r\n    };\r\n\r\n    // Create Stomp Service\r\n    this.stompService = new StompService(stompConfig);\r\n\r\n    // Connect to a Stream\r\n    this.messages = this.stompService.subscribe(streamUrl);\r\n  }\r\n\r\n  public stream(): Observable<Message> {\r\n    return this.messages;\r\n  }\r\n\r\n  public send(url: string, message: any) {\r\n    return this.stompService.publish(url, JSON.stringify(message));\r\n  }\r\n\r\n  public state(): BehaviorSubject<StompState> {\r\n    return this.stompService.state;\r\n  }\r\n}\r\n"],"sourceRoot":""}